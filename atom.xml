<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HscBook.</title>
  
  <subtitle>互联网的技术大杂烩</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.hscbook.com/"/>
  <updated>2018-07-22T07:38:58.469Z</updated>
  <id>https://www.hscbook.com/</id>
  
  <author>
    <name>Hscpro</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>树莓派音乐闹钟，定时播放网易云音乐每日推荐歌单歌曲及插播语音天气预报</title>
    <link href="https://www.hscbook.com/article/raspberrypi-cloudmusic/"/>
    <id>https://www.hscbook.com/article/raspberrypi-cloudmusic/</id>
    <published>2018-05-31T14:00:00.000Z</published>
    <updated>2018-07-22T07:38:58.469Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>早些时候写了一篇文章《<a href="https://www.hscbook.com/article/raspberrypi-alarmclock/">树莓派打造淡入闹钟，让电台轻轻的叫你起床</a>》，可是现在听FM音质差不说未必也太怀旧了；最近闲下来又写了个Shell脚本配合NeteaseCloudMusicAPI实现播放网易云音乐每日推荐歌曲，并支持插播一段天气预报或者自定义语音提示；由于是纯Shell实现理论上支持运行Shell的Linux系统都能使用。<br><a id="more"></a></p></blockquote><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="TTS-API"><a href="#TTS-API" class="headerlink" title="TTS API"></a>TTS API</h3><p>使用百度语音将文本转换为音频文件</p><p>官方首页：<a href="http://yuyin.baidu.com/tts" rel="external nofollow noopener noreferrer" target="_blank">百度TTS</a> 注册教程：<a href="http://yuyin.baidu.com/docs/asr/82" rel="external nofollow noopener noreferrer" target="_blank">官方文档</a></p><h3 id="Weather-API"><a href="#Weather-API" class="headerlink" title="Weather API"></a>Weather API</h3><p>使用和风天气获取城市天气预报信息</p><p>官方首页：<a href="http://www.heweather.com" rel="external nofollow noopener noreferrer" target="_blank">和风天气</a> 注册教程：<a href="http://www.heweather.com/support/join" rel="external nofollow noopener noreferrer" target="_blank">官方文档</a></p><h3 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h3><p>Mplayer 播放音乐、播放天气预报以及语音类；JQ 分析API、分析Cookies并保存。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mplayer jq -y</span><br></pre></td></tr></table></figure><p>获取网易云音乐的每日歌单需要依赖 <a href="https://github.com/Binaryify/NeteaseCloudMusicApi" rel="external nofollow noopener noreferrer" target="_blank">NeteaseCloudMusicAPI</a> 安装文档：<a href="https://binaryify.github.io/NeteaseCloudMusicApi" rel="external nofollow noopener noreferrer" target="_blank">网易云音乐API</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装</span></span><br><span class="line">git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git</span><br><span class="line">npm install</span><br><span class="line"><span class="meta">#</span><span class="bash">运行</span></span><br><span class="line">node app.js</span><br></pre></td></tr></table></figure><h2 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h2><p>安装好 NeteaseCloudMusicAPI 及注册了百度语音、和风天气后，直接拉取代码库或者在 <a href="https://github.com/Hscpro/NeteaseCloudMusic.git" rel="external nofollow noopener noreferrer" target="_blank">Github</a> 获取脚本放到任意目录并根据注释修改参数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">拉取代码</span></span><br><span class="line">sudo cd home &amp;&amp; git clone https://github.com/Hscpro/NeteaseCloudMusic.git</span><br></pre></td></tr></table></figure><h2 id="脚本参数"><a href="#脚本参数" class="headerlink" title="脚本参数"></a>脚本参数</h2><p>只列出关键参数，完整脚本托管在 <a href="https://github.com/Hscpro/NeteaseCloudMusic.git" rel="external nofollow noopener noreferrer" target="_blank">Github</a></p><h3 id="主程序脚本"><a href="#主程序脚本" class="headerlink" title="主程序脚本"></a>主程序脚本</h3><p>脚本名称：NeteaseCloudMusic 脚本参数：-weather（插播天气预报，可选）</p><p>播放音乐并插播天气预报：<code>./NeteaseCloudMusic -weather</code></p><p>修改 <em>playermusic()</em> 函数中 <em>if [ “$weather” = “-weather” ]&amp;&amp;[ “$1” = “1” ];then </em>的 <em>1</em> 可控制第几首播放天气（<em>0</em>为第一首，<em>1</em>为第二首以此类推）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">Systemd服务接口的notify通知，避免长时间占用Systemd</span></span><br><span class="line"><span class="meta">#</span><span class="bash">使用Systemd的时候以notify模式启动，不使用的话可删除</span></span><br><span class="line">if [ $INVOCATION_ID ];then </span><br><span class="line">    echo 'Systemd ID:' $INVOCATION_ID</span><br><span class="line">    systemd-notify --pid=$$</span><br><span class="line">    systemd-notify --ready</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">获取当前脚本所在文件夹路径</span></span><br><span class="line">work_path=$(dirname $(readlink -f $0))</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">网易云音乐账户</span></span><br><span class="line">Phone="API限制账号必须为电话形式"</span><br><span class="line">PassWord="账号密码"</span><br><span class="line"><span class="meta">#</span><span class="bash">限制最大获取日推歌曲数（网易日推最大20）</span></span><br><span class="line">number=20</span><br><span class="line"><span class="meta">#</span><span class="bash">网易云音乐API服务地址默认为3000（NeteaseCloudMusicAPI）</span></span><br><span class="line">APIService=localhost:3000</span><br><span class="line"><span class="meta">#</span><span class="bash">Mplayer控制路径（控制歌曲淡出淡入的管道）</span></span><br><span class="line">APIMplayer=/tmp/MplayerMusic-Control</span><br><span class="line"><span class="meta">#</span><span class="bash">Mplayer均衡器（31Hz 62Hz 125Hz 250Hz 500Hz 1kHz 2Hz 4Hz 8kHz 16kHz）</span></span><br><span class="line">effect=0:0:0:0:0:0:0:0:0:0</span><br><span class="line"><span class="meta">#</span><span class="bash">定义储存歌曲ID数组与变量</span></span><br><span class="line">declare -a dataid</span><br><span class="line">musicid=""</span><br><span class="line"></span><br><span class="line">··· 略 ···</span><br><span class="line"></span><br><span class="line">function init()&#123;</span><br><span class="line">  weather=$1</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 初始化系统播放音量</span></span><br><span class="line">  /usr/bin/amixer set PCM 95% &gt; /dev/null</span><br><span class="line">  if [ -e "$APIMplayer" ]; then</span><br><span class="line">    rm $APIMplayer</span><br><span class="line">  fi</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Cookies保存位置（默认为当前脚本所在文件夹内的cache文件夹内）</span></span><br><span class="line">  chedir=$work_path/cache</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">··· 略 ···</span><br><span class="line"></span><br><span class="line">function playermusic()&#123;</span><br><span class="line"><span class="meta">  #</span><span class="bash">防止网络故障播放失败时影响下一曲</span></span><br><span class="line">  killall MplayerVolume &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">  killall mplayer &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">  killall Weather &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"><span class="meta">  #</span><span class="bash">歌曲淡入控制</span></span><br><span class="line">  if [ "$1" = "0" ];then</span><br><span class="line">    #第一首歌长淡入（以0.5秒的速度从0递增到55）</span><br><span class="line">    $work_path/MplayerVolume U $APIMplayer 0.5 0 50 &amp;</span><br><span class="line">  else</span><br><span class="line">    #后续歌曲短淡入（以0.2秒的速度从0递增到35）</span><br><span class="line">    $work_path/MplayerVolume U $APIMplayer 0.2 0 35 &amp;</span><br><span class="line">  fi</span><br><span class="line"><span class="meta">  #</span><span class="bash">插播天气预报（延时30秒以0.3秒的速度降低音量到15以35的音量播放天气预报后恢复到35）（第二首音乐）</span></span><br><span class="line">  if [ "$weather" = "-weather" ]&amp;&amp;[ "$1" = "1" ];then</span><br><span class="line">    sleep 1 &amp;&amp; $work_path/Weather $APIMplayer 60 0.3 15 35 &amp;</span><br><span class="line">  fi</span><br><span class="line"><span class="meta">  #</span><span class="bash">Mplayer播放音乐</span></span><br><span class="line">  mplayer -slave -input file=$APIMplayer -cache-min 10 -cache 51200 -really-quiet -softvol -volume 0 -af equalizer=$effect $2 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">··· 略 ···</span><br></pre></td></tr></table></figure><h3 id="和风天气脚本"><a href="#和风天气脚本" class="headerlink" title="和风天气脚本"></a>和风天气脚本</h3><p>脚本名称：Heweather 脚本参数：T天气简报/S生活指数/K空气质量</p><p>例如获取空气质量：<code>./Heweather K</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">和风天气KEY</span></span><br><span class="line">key_access=c974d98ef5XXXXXXXXXXXXX5b218be</span><br><span class="line"></span><br><span class="line">··· 略 ···</span><br></pre></td></tr></table></figure><h3 id="百度语音转换脚本"><a href="#百度语音转换脚本" class="headerlink" title="百度语音转换脚本"></a>百度语音转换脚本</h3><p>脚本名称：BaiduTTS 脚本参数参数：(需要转换的文本) (播放音量，若为空则输出音频播放地址)</p><p>例如播放一段文本：<code>./BaiduTTS &quot;Hello world&quot; 50</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">设备码</span></span><br><span class="line">id_mac=$(hostname)</span><br><span class="line"><span class="meta">#</span><span class="bash">百度KEY</span></span><br><span class="line">key_api=zDxXdXXXXXXXI42xxxRL8</span><br><span class="line">key_secret=fab01dXXXXXXXXXXXXXXXXXXXXXX56543</span><br><span class="line"><span class="meta">#</span><span class="bash">语速，取值0-9，默认为5中语速</span></span><br><span class="line">tts_spd=5</span><br><span class="line"><span class="meta">#</span><span class="bash">音调，取值0-9，默认为5中语调</span></span><br><span class="line">tts_pit=5</span><br><span class="line"><span class="meta">#</span><span class="bash">音量，取值0-15，默认为5中音量</span></span><br><span class="line">tts_vol=10</span><br><span class="line"><span class="meta">#</span><span class="bash">发音人选择, 0为普通女声，1为普通男生，3为情感合成-度逍遥，4为情感合成-度丫丫，默认为普通女声</span></span><br><span class="line">tts_per=3</span><br><span class="line"><span class="meta">#</span><span class="bash">Mplayer控制路径(语音)</span></span><br><span class="line">APIMplayer=/tmp/MplayerTTS-Control</span><br><span class="line"></span><br><span class="line">··· 略 ···</span><br></pre></td></tr></table></figure><h2 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h2><p>修改好参数后需要给脚本添加执行权限，并测试下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">获取权限</span></span><br><span class="line">chmod 755 /home/NeteaseCloudMusic/*</span><br><span class="line"><span class="meta">#</span><span class="bash">试运行</span></span><br><span class="line">/home/NeteaseCloudMusic/NeteaseCloudMusic</span><br></pre></td></tr></table></figure><h2 id="定时启动"><a href="#定时启动" class="headerlink" title="定时启动"></a>定时启动</h2><p>将脚本添加到 Systemd <strong>或者 </strong>Crontab 即可实现定时启动既闹钟的功能</p><h3 id="Systemd"><a href="#Systemd" class="headerlink" title="Systemd"></a>Systemd</h3><p>在 <code>/lib/systemd/system</code> 创建两个文件</p><p><code>nano /lib/systemd/system/NeteaseCloudMusicApi.service</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=NeteaseCloudMusic Play</span><br><span class="line">Requires=network.target NeteaseCloudMusicApi.service</span><br><span class="line">After=network.target NeteaseCloudMusicApi.service</span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">Restart=no</span><br><span class="line"><span class="meta">#</span><span class="bash">脚本所在路径</span></span><br><span class="line">RootDirectory=/</span><br><span class="line">WorkingDirectory=/home/NeteaseCloudMusic/</span><br><span class="line"><span class="meta">#</span><span class="bash">执行的命令（播放音乐并插播天气预报）</span></span><br><span class="line">ExecStart=/home/NeteaseCloudMusic//NeteaseCloudMusic -weather</span><br></pre></td></tr></table></figure><p><code>nano /lib/systemd/system/NeteaseCloudMusic.timer</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=NeteaseCloudMusic</span><br><span class="line">[Timer]</span><br><span class="line">Unit=NeteaseCloudMusic.service</span><br><span class="line"><span class="meta">#</span><span class="bash">每天8点启动</span></span><br><span class="line">OnCalendar=*-*-* 08:00:00</span><br><span class="line">AccuracySec=1m</span><br><span class="line">WakeSystem=no</span><br><span class="line">Persistent=no</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>安装 Unit</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装定时器</span></span><br><span class="line">systemctl enable NeteaseCloudMusic.timer</span><br><span class="line">systemctl start NeteaseCloudMusic.timer</span><br><span class="line"><span class="comment">#查看定时器</span></span><br><span class="line">systemctl list-timers</span><br></pre></td></tr></table></figure><h3 id="Crontab"><a href="#Crontab" class="headerlink" title="Crontab"></a>Crontab</h3><p>运行命令 <code>export EDITOR=&quot;nano&quot; ; crontab -e -u root</code> 在末尾添加一段代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">每天8点播放音乐并插播天气预报</span></span><br><span class="line">0 8 * * * /home/NeteaseCloudMusic//NeteaseCloudMusic -weather</span><br></pre></td></tr></table></figure><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p><strong>How to live without music ?</strong></p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/raspberrypi-cloudmusic/">https://www.hscbook.com/article/raspberrypi-cloudmusic/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;早些时候写了一篇文章《&lt;a href=&quot;https://www.hscbook.com/article/raspberrypi-alarmclock/&quot;&gt;树莓派打造淡入闹钟，让电台轻轻的叫你起床&lt;/a&gt;》，可是现在听FM音质差不说未必也太怀旧了；最近闲下来又写了个Shell脚本配合NeteaseCloudMusicAPI实现播放网易云音乐每日推荐歌曲，并支持插播一段天气预报或者自定义语音提示；由于是纯Shell实现理论上支持运行Shell的Linux系统都能使用。&lt;br&gt;
    
    </summary>
    
      <category term="Geek" scheme="https://www.hscbook.com/categories/geek/"/>
    
    
      <category term="shell" scheme="https://www.hscbook.com/tags/shell/"/>
    
      <category term="code" scheme="https://www.hscbook.com/tags/code/"/>
    
      <category term="linux" scheme="https://www.hscbook.com/tags/linux/"/>
    
      <category term="RaspBerryPi" scheme="https://www.hscbook.com/tags/raspberrypi/"/>
    
      <category term="Geek" scheme="https://www.hscbook.com/tags/geek/"/>
    
      <category term="NeteaseCloudMusic" scheme="https://www.hscbook.com/tags/neteasecloudmusic/"/>
    
  </entry>
  
  <entry>
    <title>免费 Let&#39;s Encrypt 证书申请、部署全攻略与自动续期教程</title>
    <link href="https://www.hscbook.com/article/code-autohttp/"/>
    <id>https://www.hscbook.com/article/code-autohttp/</id>
    <published>2018-03-11T10:00:00.000Z</published>
    <updated>2018-03-13T04:26:47.782Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>如今 HTTPS 证书不再是像以前那么昂贵、缓慢，HTTP/2 等协议的支持使 HTTPS 变得快速甚至比 HTTP 要快，本篇教程利用 Monit 监控 Shell 脚本配合 ssl-cert-check 实现证书过期的自动续签，续签失败邮件告警的解决方案<br><a id="more"></a></p></blockquote><h2 id="证书的申请"><a href="#证书的申请" class="headerlink" title="证书的申请"></a>证书的申请</h2><p>以互联网安全小组提供的 Let’s Encrypt 证书为例，简单介绍从安装证书工具到申请证书的方法</p><h3 id="安装-CertBoot-证书工具"><a href="#安装-CertBoot-证书工具" class="headerlink" title="安装 CertBoot 证书工具"></a>安装 CertBoot 证书工具</h3><p>从 <a href="https://certbot.eff.org/" rel="external nofollow noopener noreferrer" target="_blank">Certbot</a> 官方网站可取得各系统环境的安装教程，官方有列举的环境教程都比较简单，几乎都是通过系统的包管理工具即可顺利安装；这里以 Linux Debian9 / Nginx 举例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span># 安装 CertBoot 证书工具</span><br><span class="line">sudo apt-get install certbot -t stretch-backports</span><br></pre></td></tr></table></figure><p>###　Let’s Encrypt 证书的申请</p><p>前面我们已经安装了 Let’s Encrypt 的证书管理工具，现在我们通过这个管理工具取得证书。</p><p>申请证书过程中需要域名可以正常访问，证书管理工具需要访问网站下的 <code>.well-known</code> 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 申请 Let's Encrypt 证书（/web/domain.com 为网站根目录，domain.com 是要申请的域名）</span></span><br><span class="line">sudo certbot certonly --webroot -w /web/domain.com -d domain.com</span><br><span class="line"><span class="comment">## 成功提示</span></span><br><span class="line">... 略 ...</span><br><span class="line">IMPORTANT NOTES:</span><br><span class="line"> - Congratulations! Your certificate and chain have been saved at /etc/letsencrypt/live/domain.com/fullchain.pem.</span><br><span class="line"><span class="comment">## 生成 ssl_dhparam</span></span><br><span class="line">sudo openssl dhparam -out /certificate/ser.domain.com/dhparam.pem 2048</span><br></pre></td></tr></table></figure><p>取得的证书在<code>/etc/letsencrypt/live/ser.domain.com/</code> 文件夹内，证书文件为: <code>fullchain.pem</code> 密钥文件为：<code>privkey.pem</code> ，直接在Nginx引用这两个文件就可以了，ssl_dhparam 证书假设存放在 /certificate 文件夹内。</p><p>如何配置网站的 HTTPS 这里推荐一个生成配置的网站 <a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/" rel="external nofollow noopener noreferrer" target="_blank">Mozilla SSL Configuration Generator</a></p><p>下面是 NGINX 的配置举例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line">    # 310 跳转HTTP流量到HTTPS</span><br><span class="line">    return 301 https://$host$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line">    listen [::]:443 ssl http2;</span><br><span class="line"></span><br><span class="line">    # 将上面生成的证书和密钥文件填到这里</span><br><span class="line">    ssl_certificate /etc/letsencrypt/live/ser.domain.com/fullchain.pem;</span><br><span class="line">    ssl_certificate_key /etc/letsencrypt/live/ser.domain.com/privkey.pem;</span><br><span class="line">    ssl_session_timeout 1d;</span><br><span class="line">    ssl_session_cache shared:SSL:50m;</span><br><span class="line">    ssl_session_tickets off;</span><br><span class="line"></span><br><span class="line">    # 将上面生成的ssl_dhparam证书填到这里</span><br><span class="line">    ssl_dhparam /certificate/ser.domain.com/dhparam.pem;</span><br><span class="line"></span><br><span class="line">    # intermediate configuration. tweak to your needs.</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_ciphers &apos;ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS&apos;;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">    # HSTS 证书缓存，务必确认能正常访问后再开启 (15768000 seconds = 6 months)</span><br><span class="line">    #add_header Strict-Transport-Security max-age=15768000;</span><br><span class="line"></span><br><span class="line">    # OCSP Stapling ---</span><br><span class="line">    # fetch OCSP records from URL in ssl_certificate and cache them</span><br><span class="line">    ssl_stapling on;</span><br><span class="line">    ssl_stapling_verify on;</span><br><span class="line"></span><br><span class="line">    ## verify chain of trust of OCSP response using Root CA and Intermediate certs</span><br><span class="line">    #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;</span><br><span class="line"></span><br><span class="line">    resolver &lt;IP DNS resolver&gt;;</span><br><span class="line"></span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="NGINX-HTTP-2-的启用"><a href="#NGINX-HTTP-2-的启用" class="headerlink" title="NGINX HTTP/2 的启用"></a>NGINX HTTP/2 的启用</h3><p>NGINX 启用 HTTP/2 协议需要满足下面几个条件：</p><ol><li><a href="https://nginx.org/en/docs/http/ngx_http_v2_module.html" rel="external nofollow noopener noreferrer" target="_blank">ngx_http_v2_module</a> 模块</li><li><a href="http://nginx.org/en/docs/http/ngx_http_ssl_module.html" rel="external nofollow noopener noreferrer" target="_blank">ngx_http_ssl_module</a> 模块</li><li><a href="http://nginx.org/en/download.html" rel="external nofollow noopener noreferrer" target="_blank">NGINX</a> V1.9.5 以上</li><li><a href="https://www.openssl.org/source/" rel="external nofollow noopener noreferrer" target="_blank">OpenSSL</a> V1.0.2 以上</li></ol><p>若系统的 OpenSSL 低于 V1.0.2 则需要更新系统 OpenSSL 或者编译 NGINX 的时候指定 OpenSSL 源码文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 指定 OpenSSL 编译 NGINX</span></span><br><span class="line">sudo ./configure --with-http_v2_module --with-http_ssl_module --with-openssl=/installed/openssl-1.0.2l</span><br></pre></td></tr></table></figure><h2 id="Let’s-Encrypt-证书自动续签"><a href="#Let’s-Encrypt-证书自动续签" class="headerlink" title="Let’s Encrypt 证书自动续签"></a>Let’s Encrypt 证书自动续签</h2><p>经过上面的安装生成后网站现在已经可以正常使用HTTPS协议，但是 Let’s Encrypt 只有 90 天的有效期，90天一过就需要重新申请证书，虽说申请挺方便，但是总有忘记的时候。网上的自动签署教程几乎都是清一色的利用 <code>CronTab</code> 或者 <code>SYSTemd</code> 定时签署；感觉不妥，万一程序出问题签署失败了自己也不知道，索性写个简单脚本实时监控证书过期时间，以及利用 Monit 监控 Shell 返回的退出码判断是否成功续签了证书。</p><h3 id="Let’s-Encrypt-证书续签脚本"><a href="#Let’s-Encrypt-证书续签脚本" class="headerlink" title="Let’s Encrypt 证书续签脚本"></a>Let’s Encrypt 证书续签脚本</h3><p>Debian 执行 <code>sudo apt-get install ssl-cert-check</code> 安装，ssl-cert-check 用来读取证书过期时间</p><p>当证书还剩 30天过期，则运行 <code>/usr/bin/certbot renew</code> 进行续签证书</p><p>成功续签、无需续签脚本返回 0 ；续签失败脚本返回 1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 证书文件（有多少个证书就写多少个数组变量并指向证书文件）</span></span><br><span class="line">certificate[0]=<span class="string">"/etc/letsencrypt/live/domain.com/fullchain.pem"</span></span><br><span class="line">certificate[1]=<span class="string">"/etc/letsencrypt/live/domain.com/fullchain2.pem"</span></span><br><span class="line"></span><br><span class="line">upssl=0;</span><br><span class="line">sloop=<span class="variable">$&#123;#certificate[@]&#125;</span></span><br><span class="line"><span class="built_in">let</span> sloop-=1;</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> $( seq 0 <span class="variable">$sloop</span> ) </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  ssl-cert-check -c <span class="variable">$&#123;certificate[$k]&#125;</span> -x 30 -n -q</span><br><span class="line">  <span class="keyword">if</span> [ $? == 1 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">      upssl=1;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"INFO: CertiFicate Newest"</span></span><br><span class="line">      <span class="built_in">exit</span> 0</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$upssl</span> == 1 ]; <span class="keyword">then</span></span><br><span class="line">  /usr/bin/certbot renew</span><br><span class="line">  <span class="keyword">if</span> [ $? == 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"INFO: UPdate CertiFicate OK !"</span></span><br><span class="line">      <span class="built_in">exit</span> 0</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Error: UPdate CertiFicate Fail"</span></span><br><span class="line">      <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="安装-Monit-程序"><a href="#安装-Monit-程序" class="headerlink" title="安装 Monit 程序"></a>安装 Monit 程序</h3><p>邮件告警实现于 <a href="https://mmonit.com/monit/" rel="external nofollow noopener noreferrer" target="_blank">Monit</a> 监控程序，由于我的服务器的服务都是由 Monit 监控的，索性就直接拿来用了。</p><p>RedHat / CentOS / Fedora 安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install monit</span><br></pre></td></tr></table></figure><p>Ubuntu / Debian / Linux Mint 安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install monit</span><br></pre></td></tr></table></figure><h3 id="配置-Monit-监控脚本"><a href="#配置-Monit-监控脚本" class="headerlink" title="配置 Monit 监控脚本"></a>配置 Monit 监控脚本</h3><p>配置 Monit 邮件告警功能，修改配置文件 <code>sudo nano /etc/monit/monitrc</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 设置邮件通知服务器,已阿里云服务器举例</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash">服务器地址与端口</span></span><br><span class="line">  set mailserver smtp.mxhichina.com port 465</span><br><span class="line">      #用户名</span><br><span class="line">      username "admin@domain.com" </span><br><span class="line">      #密码</span><br><span class="line">      password "password"</span><br><span class="line">      #验证加密方式</span><br><span class="line">      using TLSV1</span><br><span class="line">      #登陆超时</span><br><span class="line">      with timeout 30 seconds</span><br></pre></td></tr></table></figure><p>添加一个脚本监控 <code>sudo nano /etc/monit/conf.d/shell</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 监控 /shell/certificate 执行超时时间 300 秒</span></span><br><span class="line">check program Certificate with path /shell/certificate timeout 300 seconds</span><br><span class="line">    # 每 720 个周期执行一次脚本</span><br><span class="line">    every 720 cycles</span><br><span class="line">    # 脚本返回码不为 0 发送一封告警邮件到 hscbook@domain.com</span><br><span class="line">    # 360 个周期内多次报警只发送一次告警邮件</span><br><span class="line">    if status != 0 then alert</span><br><span class="line">    alert hscbook@domain.com with reminder on 360 cycles</span><br></pre></td></tr></table></figure><h3 id="其他自动签署方案"><a href="#其他自动签署方案" class="headerlink" title="其他自动签署方案"></a>其他自动签署方案</h3><p>官方 <a href="https://letsencrypt.org/docs/client-options/" rel="external nofollow noopener noreferrer" target="_blank">Let’s Encrypt</a> 看到的一款NGINX 插件 <a href="https://github.com/GUI/lua-resty-auto-ssl" rel="external nofollow noopener noreferrer" target="_blank">lua-resty-auto-ssl</a> ，可以实现自动证书签署，过期自动续签，挺强大但是需要安装一些依赖环境，若没有其他环境用到 OpenResty LuaRocks 感觉有点小题大做了，各位看官视自己情况选着使用吧。</p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/code-autohttp/">https://www.hscbook.com/article/code-autohttp/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;如今 HTTPS 证书不再是像以前那么昂贵、缓慢，HTTP/2 等协议的支持使 HTTPS 变得快速甚至比 HTTP 要快，本篇教程利用 Monit 监控 Shell 脚本配合 ssl-cert-check 实现证书过期的自动续签，续签失败邮件告警的解决方案&lt;br&gt;
    
    </summary>
    
      <category term="Code" scheme="https://www.hscbook.com/categories/code/"/>
    
    
      <category term="Let&#39;s Encrypt" scheme="https://www.hscbook.com/tags/let-s-encrypt/"/>
    
      <category term="HTTPS" scheme="https://www.hscbook.com/tags/https/"/>
    
      <category term="shell" scheme="https://www.hscbook.com/tags/shell/"/>
    
      <category term="code" scheme="https://www.hscbook.com/tags/code/"/>
    
      <category term="linux" scheme="https://www.hscbook.com/tags/linux/"/>
    
      <category term="hexo" scheme="https://www.hscbook.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>一个合格的服务器自动备份案例，闭环备份机制出错邮件报警</title>
    <link href="https://www.hscbook.com/article/linux-backups/"/>
    <id>https://www.hscbook.com/article/linux-backups/</id>
    <published>2017-09-23T07:02:38.000Z</published>
    <updated>2018-06-24T05:54:31.975Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>数据无价，服务器备份机制是服务器维护的重中之重！利用Dropbox的上传脚本+Monit监控实现服务器每周循环生成备份并上传到 Dropbox 网盘，通过 Shell 脚本实现出现备份失败及时通过邮件通知、自动清理旧的备份数据、禁止在黄金时段执行备份、禁止重复覆盖备份，确保服务器的宝贵数据万无一失！<br><a id="more"></a></p></blockquote><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><h3 id="Monit-监控服务"><a href="#Monit-监控服务" class="headerlink" title="Monit 监控服务"></a>Monit 监控服务</h3><p>安装没有什么技术难度，本文不再啰嗦，有包管理用包管理安装没包管理用<a href="https://github.com/arnaudsj/monit" rel="external nofollow noopener noreferrer" target="_blank">源码</a>编译安装，遇到困难自行Google。</p><p>RedHat / CentOS / Fedora<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum install monit</span><br></pre></td></tr></table></figure><p></p><p>Ubuntu / Debian / Linux Mint<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install monit</span><br></pre></td></tr></table></figure><p></p><h3 id="Dropbox-上传脚本"><a href="#Dropbox-上传脚本" class="headerlink" title="Dropbox 上传脚本"></a>Dropbox 上传脚本</h3><p>直接使用 <a href="https://github.com/andreafabrizi/Dropbox-Uploader" rel="external nofollow noopener noreferrer" target="_blank">Andreafabrizi</a> 写好的现成脚本 <a href="https://github.com/andreafabrizi/Dropbox-Uploader" rel="external nofollow noopener noreferrer" target="_blank">Dropbox-Uploader</a> 稍作配置即可使用，配置教程下方提及。</p><p><strong>下载 Dropbox 上传脚本</strong><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> GET 脚本到服务器</span></span><br><span class="line">curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o /back/dropbox_uploader.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 赋予执行权限</span></span><br><span class="line">chmod +x dropbox_uploader.sh</span><br></pre></td></tr></table></figure><p></p><p><strong>配置 Dropbox 上传脚本</strong></p><p>访问 <a href="https://www.dropbox.com/developers/apps" rel="external nofollow noopener noreferrer" target="_blank">https://www.dropbox.com/developers/apps</a></p><p>创建 APP 程序 （点击Create app）<br><img src="https://hscbook.b0.upaiyun.com/image/linux-backups/20170922185018.jpg" alt="创建 Dropbox API"></p><p>创建 API 密钥<br><img src="https://hscbook.b0.upaiyun.com/image/linux-backups/20170922190421.jpg" alt="创建 API 密钥"></p><p>运行 <code>dropbox_uploader.sh</code> 按提示输入 Dropbox API 密钥</p><h2 id="构建备份脚本"><a href="#构建备份脚本" class="headerlink" title="构建备份脚本"></a>构建备份脚本</h2><p>本脚本是基于 Monit 的监控原理来写的，所以最好配合 Monit 来使用(邮件报警功能是由 Monit 实现的)。由于我的服务器没有什么要用得上Mysql数据库的程序所以没写这方面的备份脚本，可直接备份Mysql的数据文件夹是一样的效果。</p><p><strong>注意事项</strong></p><ol><li>临时文件夹：’BACK_DATA’ 变量的路径<strong>不能</strong>在要<strong>备份的文件夹</strong>内，最好就是设置在系统的 ‘tmp’临时文件夹内</li><li>备份文件夹：需要多少备份多少个目录就添加多少个数组，例：备份两个目录 ‘ folder[0]=”/…” folder[1]=”/…” ‘ 备份三个目录 ‘ folder[0]=”/…” folder[1]=”/…” folder[2]=”/…” ‘ 以此类推</li><li>Dropbox的目录： ‘DROPBOX_DIR ‘要设置在子目录，这样设置有个好处就是多个服务器的备份不冲突</li><li>成功备份脚本返回 （0 ） 备份失败脚本返回（1）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 需要备份的文件夹</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#########################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">需要备份多少个文件夹就添加几个数组（结尾不带/）</span></span><br><span class="line">folder[0]="/data"</span><br><span class="line">folder[1]="/etc"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 参数设置</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#########################</span></span></span><br><span class="line">dropbox="/back/dropbox_uploader.sh"          #上传程序脚本位置</span><br><span class="line">BACK_DATA="/tmp/dropbox_tmp"                 #临时文件夹（不要放在备份文件夹内）</span><br><span class="line">DROPBOX_DIR=/$(hostname)                     #上传到Dropbox的目录 $(hostname)=当前主机名</span><br><span class="line">tarconf="--exclude=*.log --exclude=*.pyc"    #tar打包压缩额外参数</span><br><span class="line">olddata=2                                    #删除几周前的备份</span><br><span class="line">uptime=0100                                  #只能在什么时间之前执行（输入纯数字）</span><br><span class="line">upweek=1                                     #礼拜几执行（0代表星期天）</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 判断是否能执行</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###############################</span></span></span><br><span class="line">if [ $(date +"%H%M") -gt $uptime ]; then    #判断是否在指定运行时间内</span><br><span class="line">  echo "INFO: No running time" $uptime      #显示不在运行时间</span><br><span class="line">  exit 0                                    #正常退出</span><br><span class="line">fi</span><br><span class="line">if [ $(date +"%w") -ne $upweek ]; then      #判断是否在指定运行周天内</span><br><span class="line">  echo "INFO: No running week" $upweek      #显示不在运行时间</span><br><span class="line">  exit 0                                    #正常退出</span><br><span class="line">fi</span><br><span class="line">result=$($dropbox -q search "_NO."$(date +"%Y")$(date +"%W").tar.gz)   #搜索云上本周备份文件</span><br><span class="line">if [ -n "$result" ]; then                                              #判断云上是否有本周备份文件</span><br><span class="line">  echo "INFO: Be backups $DROPBOX_DIR$&#123;result##*$DROPBOX_DIR&#125;"         #显示云上已有本周的备份文件路径</span><br><span class="line">  exit 0                                                               #正常退出</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 数据上传</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###############################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 建立临时文件夹</span></span></span><br><span class="line">if [ ! -d "$BACK_DATA" ]; then</span><br><span class="line">  sudo mkdir $BACK_DATA</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 数据上传</span></span></span><br><span class="line">sloop=$&#123;#folder[@]&#125;                   #获取数组长度</span><br><span class="line">let sloop-=1;                         #减1（数组从0开始）</span><br><span class="line">for k in $( seq 0 $sloop ); do        #循环压缩上传</span><br><span class="line">  tar zcf $BACK_DATA/$&#123;folder[$k]##*/&#125;_$(date +"%Y%m%d")_NO.$(date +"%Y")$(date +"%W").tar.gz $tarconf -C $&#123;folder[$k]%/*&#125;/ $&#123;folder[$k]##*/&#125;    #压缩数据并生成时间与标识代码</span><br><span class="line">  if [ $? != 0 ]; then                                                                                                                           #压缩失败</span><br><span class="line">    echo "Error: Pack" $&#123;folder[$k]##*/&#125;_$(date +"%Y%m%d")_NO.$(date +"%Y")$(date +"%W").tar.gz "Error !"                                        #显示错误</span><br><span class="line">    exit 1                                                                                                                                       #退出代码：1</span><br><span class="line">  fi</span><br><span class="line"><span class="meta">  $</span><span class="bash">dropbox -q upload <span class="variable">$BACK_DATA</span>/<span class="variable">$&#123;folder[$k]##*/&#125;</span>_$(date +<span class="string">"%Y%m%d"</span>)_NO.$(date +<span class="string">"%Y"</span>)$(date +<span class="string">"%W"</span>).tar.gz <span class="variable">$DROPBOX_DIR</span>/$(date +%Y-%m-%d)/         <span class="comment">#上传数据到当前日期文件夹</span></span></span><br><span class="line">  if [ $? != 0 ]; then                                                                                                                           #上传失败</span><br><span class="line">    echo "Error: UPload" $&#123;folder[$k]##*/&#125;_$(date +"%Y%m%d")_NO.$(date +"%Y")$(date +"%W").tar.gz "Error !"                                      #显示错误</span><br><span class="line">    exit 1                                                                                                                                       #退出代码：1</span><br><span class="line">  fi</span><br><span class="line">done</span><br><span class="line">echo "INFO: Upload data successfully" #成功上传数据</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 旧备份数据清理</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###############################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">提取星期\年份</span></span><br><span class="line">wold=$(date +"%W")</span><br><span class="line">yold=$(date +"%Y")</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 生成旧文件标识代码</span></span></span><br><span class="line">let wold-=$olddata;         #减去olddata</span><br><span class="line">if [ $wold -le 0 ]; then    #是负数执行</span><br><span class="line">  let yold-=1               #年减一</span><br><span class="line">  if [ $wold -lt 0 ]; then  #判断是否为负数</span><br><span class="line">    let wold+=53            #与53相加</span><br><span class="line">  else                      #不是负数</span><br><span class="line">    wold=53                 #若不为负数则为最大值53</span><br><span class="line">  fi</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 搜索数据、删除数据</span></span></span><br><span class="line">result=$($dropbox -q search "_NO.$yold$wold.tar.gz")       #根据旧文件标识代码搜索数据</span><br><span class="line">if [ -n "$result" ]; then                                  #根据返回结果不为空执行</span><br><span class="line">  result=$&#123;result##*$DROPBOX_DIR&#125;                          #处理返回数据提取第一个$DROPBOX_DIR之前的内容</span><br><span class="line"><span class="meta">  $</span><span class="bash">dropbox -q delete <span class="variable">$DROPBOX_DIR</span>/<span class="variable">$&#123;result%/*&#125;</span>             <span class="comment">#删除云数据（文件夹）</span></span></span><br><span class="line">  echo "INFO: Deletes folder "$DROPBOX_DIR$&#123;result%/*&#125;     #显示删除的文件夹</span><br><span class="line">else                                                       #返回结果为空</span><br><span class="line">  echo "INFO: NO OldCode "_NO.$yold$wold                   #云上没有指定文件标识的旧备份文件</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 删除临时文件夹并退出</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###############################</span></span></span><br><span class="line">rm -R $BACK_DATA</span><br><span class="line">if [ $? != 0 ]; then</span><br><span class="line">echo "Warning: $BACK_DATA Delete failed"</span><br><span class="line">fi</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><h2 id="Monit-监控脚本"><a href="#Monit-监控脚本" class="headerlink" title="Monit 监控脚本"></a>Monit 监控脚本</h2><p>Monit 的强大配置都写完的话就跑题了，这里只写邮件服务器的配置和与本文相关的配置。</p><p><strong>邮件服务器配置</strong><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">## 每隔多少秒检测一次(第二行为程序启动后延时多少秒检测):</span><br><span class="line">  set daemon 120</span><br><span class="line">   with start delay 30</span><br><span class="line">   </span><br><span class="line">## 设置邮件通知服务器(smtp)</span><br><span class="line">  set mailserver smtp.example.com port 443</span><br><span class="line">      username &quot;mail@example.com&quot; </span><br><span class="line">      password &quot;mailpassword&quot;</span><br><span class="line">      using TLSV1</span><br><span class="line">      with timeout 30 seconds</span><br><span class="line">      </span><br><span class="line">## 设置邮件通知暂存地址</span><br><span class="line">  set eventqueue</span><br><span class="line">      basedir /var/lib/monit/events   # 储存地址</span><br><span class="line">      slots 10                        # 最大储存数量</span><br><span class="line">      </span><br><span class="line">## 制定报警邮件的格式</span><br><span class="line">set mail-format &#123;</span><br><span class="line">  from:    Monit &lt;mail@example.com&gt;</span><br><span class="line">  subject: $HOST 服务器 $SERVICE 故障：$EVENT </span><br><span class="line">  message: 详细故障内容</span><br><span class="line"></span><br><span class="line">               故障主机:  $HOST</span><br><span class="line">               故障时间:  $DATE</span><br><span class="line">               Monit 尝试动作:  $ACTION</span><br><span class="line">                 </span><br><span class="line">发生故障的条件</span><br><span class="line"></span><br><span class="line">               $DESCRIPTION</span><br><span class="line"></span><br><span class="line">Monit Server</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p><strong>备份脚本监控</strong><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#由于备份的时间较长所以设置为3600秒才超时</span><br><span class="line">check program ServerBack with path /back/serverback timeout 3600 seconds</span><br><span class="line">    #每 5（既 120*5 秒）个周期运行一次</span><br><span class="line">    every 5 cycles</span><br><span class="line">    #判断脚本退出码，若不为0则发送一封报警邮件</span><br><span class="line">    if status != 0 then alert</span><br><span class="line">    # 360（既 120*360 秒）个周期内只发送一封邮件给 hscbook@example.com</span><br><span class="line">    alert hscbook@example.com with reminder on 360 cycles</span><br></pre></td></tr></table></figure><p></p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>遇到什么问题先 Google+Baidu 后再提问才是优秀的程序员！最后附上脚本原理的流程图 <del>我就是想练练流程图的使用</del></p><div id="flowchart-0" class="flow-chart"></div><script src="//cdn.bootcss.com/raphael/2.2.7/raphael.min.js"></script><script src="//cdn.bootcss.com/flowchart/1.7.0/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display:none">st1=>start: Monit 运行脚本cond1=>condition: 在运行时间cond3=>condition: 已存在备份op1=>operation: 开始压缩备份数据cond4=>condition: 压缩正常op2=>operation: 开始上传备份数据cond5=>condition: 上传正常cond6=>condition: 存在旧数据op3=>operation: 删除旧的备份数据fe=>end: 非运行时间或无需备份se=>end: 备份成功re=>end: 备份出错st1->cond1(yes)cond1(yes,right)->cond3(yes)->fecond1(no)->fecond3(no)->op1->cond4(no)->recond4(yes)->op2->cond5(no)->recond5(yes)->cond6(no)->second6(yes)->op3->se</textarea><textarea id="flowchart-0-options" style="display:none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>var code=document.getElementById("flowchart-0-code").value,options=JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)),diagram=flowchart.parse(code);diagram.drawSVG("flowchart-0",options)</script><br><br><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/linux-backups/">https://www.hscbook.com/article/linux-backups/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;数据无价，服务器备份机制是服务器维护的重中之重！利用Dropbox的上传脚本+Monit监控实现服务器每周循环生成备份并上传到 Dropbox 网盘，通过 Shell 脚本实现出现备份失败及时通过邮件通知、自动清理旧的备份数据、禁止在黄金时段执行备份、禁止重复覆盖备份，确保服务器的宝贵数据万无一失！&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.hscbook.com/categories/linux/"/>
    
    
      <category term="shell" scheme="https://www.hscbook.com/tags/shell/"/>
    
      <category term="linux" scheme="https://www.hscbook.com/tags/linux/"/>
    
      <category term="dropbox" scheme="https://www.hscbook.com/tags/dropbox/"/>
    
      <category term="backups" scheme="https://www.hscbook.com/tags/backups/"/>
    
      <category term="monit" scheme="https://www.hscbook.com/tags/monit/"/>
    
      <category term="debian" scheme="https://www.hscbook.com/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>Nginx如何在使用类似CloudFlare的CDN加速服务后还能正常获取客户端的真实IP地址</title>
    <link href="https://www.hscbook.com/article/servar-cloudflare/"/>
    <id>https://www.hscbook.com/article/servar-cloudflare/</id>
    <published>2017-09-06T10:43:38.000Z</published>
    <updated>2017-09-22T11:39:08.651Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Linux 运营干货，关于如何在使用 Content Delivery Network (CDN) 内容分发网络后服务器既后端能正常获取客户端的真实IP。本篇文章以CloudFlare为例子实例讲解获取前端客户端真实IP的方法，万事开头难相信你会了这一招应该会举一反三吧！<br><a id="more"></a></p></blockquote><h2 id="0x01-前提条件"><a href="#0x01-前提条件" class="headerlink" title="0x01 前提条件"></a>0x01 前提条件</h2><ul><li><p>nginx 模块 <a href="http://nginx.org/en/docs/http/ngx_http_realip_module.html" rel="external nofollow noopener noreferrer" target="_blank">ngx_http_realip_module</a></p></li><li><p>CDN 服务商有返回真实IP地址</p><ol><li><p><a href="https://support.cloudflare.com/hc/en-us/articles/200170986" rel="external nofollow noopener noreferrer" target="_blank">CloudFlare</a></p></li><li><p><a href="https://www.cachemoment.com/i/irJAgQn6" rel="external nofollow noopener noreferrer" target="_blank">魔门云</a></p></li></ol></li></ul><p>PS：像我就只能用得起这些免费的CDN服务了，所以我也就举了两个免费的“荔枝”</p><h2 id="0x02-获取节点IP"><a href="#0x02-获取节点IP" class="headerlink" title="0x02 获取节点IP"></a>0x02 获取节点IP</h2><p>在开始前需要取得CDN服务商的节点IP，这个CDN服务商都会提供。</p><p>例如 CloudFlare 的节点地址 <a href="https://www.cloudflare.com/ips/" rel="external nofollow noopener noreferrer" target="_blank">https://www.cloudflare.com/ips/</a></p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#CloudFlare IPv4</span><br><span class="line"><span class="number">103.21</span><span class="meta">.244</span><span class="meta">.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">103.22</span><span class="meta">.200</span><span class="meta">.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">103.31</span><span class="meta">.4</span><span class="meta">.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">104.16</span><span class="meta">.0</span><span class="meta">.0</span>/<span class="number">12</span></span><br><span class="line"><span class="number">108.162</span><span class="meta">.192</span><span class="meta">.0</span>/<span class="number">18</span></span><br><span class="line"><span class="number">131.0</span><span class="meta">.72</span><span class="meta">.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">141.101</span><span class="meta">.64</span><span class="meta">.0</span>/<span class="number">18</span></span><br><span class="line"><span class="number">162.158</span><span class="meta">.0</span><span class="meta">.0</span>/<span class="number">15</span></span><br><span class="line"><span class="number">172.64</span><span class="meta">.0</span><span class="meta">.0</span>/<span class="number">13</span></span><br><span class="line"><span class="number">173.245</span><span class="meta">.48</span><span class="meta">.0</span>/<span class="number">20</span></span><br><span class="line"><span class="number">188.114</span><span class="meta">.96</span><span class="meta">.0</span>/<span class="number">20</span></span><br><span class="line"><span class="number">190.93</span><span class="meta">.240</span><span class="meta">.0</span>/<span class="number">20</span></span><br><span class="line"><span class="number">197.234</span><span class="meta">.240</span><span class="meta">.0</span>/<span class="number">22</span></span><br><span class="line"><span class="number">198.41</span><span class="meta">.128</span><span class="meta">.0</span>/<span class="number">17</span></span><br><span class="line">#CloudFlare IPv6</span><br><span class="line"><span class="number">2400</span>:cb00::/<span class="number">32</span></span><br><span class="line"><span class="number">2405</span>:<span class="number">8100</span>::/<span class="number">32</span></span><br><span class="line"><span class="number">2405</span>:b500::/<span class="number">32</span></span><br><span class="line"><span class="number">2606</span>:<span class="number">4700</span>::/<span class="number">32</span></span><br><span class="line"><span class="number">2803</span>:f800::/<span class="number">32</span></span><br><span class="line">2c0f:f248::/<span class="number">32</span></span><br><span class="line">2a06:98c0::/<span class="number">29</span></span><br></pre></td></tr></table></figure><h2 id="0x03-配置-Nginx"><a href="#0x03-配置-Nginx" class="headerlink" title="0x03 配置 Nginx"></a>0x03 配置 Nginx</h2><p>编辑 Nginx 主配置文件 nginx.conf 添加代码，里面的注释不要更改，后面自动更新地址列表会用到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#cfip4</span><br><span class="line">set_real_ip_from 103.21.244.0/22; #cfipv4</span><br><span class="line">set_real_ip_from 103.22.200.0/22; #cfipv4</span><br><span class="line">set_real_ip_from 103.31.4.0/22; #cfipv4</span><br><span class="line">set_real_ip_from 104.16.0.0/12; #cfipv4</span><br><span class="line">set_real_ip_from 108.162.192.0/18; #cfipv4</span><br><span class="line">set_real_ip_from 131.0.72.0/22; #cfipv4</span><br><span class="line">set_real_ip_from 141.101.64.0/18; #cfipv4</span><br><span class="line">set_real_ip_from 162.158.0.0/15; #cfipv4</span><br><span class="line">set_real_ip_from 172.64.0.0/13; #cfipv4</span><br><span class="line">set_real_ip_from 173.245.48.0/20; #cfipv4</span><br><span class="line">set_real_ip_from 188.114.96.0/20; #cfipv4</span><br><span class="line">set_real_ip_from 190.93.240.0/20; #cfipv4</span><br><span class="line">set_real_ip_from 197.234.240.0/22; #cfipv4</span><br><span class="line">set_real_ip_from 198.41.128.0/17; #cfipv4</span><br><span class="line">#cfip6</span><br><span class="line">set_real_ip_from 2400:cb00::/32; #cfipv6</span><br><span class="line">set_real_ip_from 2405:8100::/32; #cfipv6</span><br><span class="line">set_real_ip_from 2405:b500::/32; #cfipv6</span><br><span class="line">set_real_ip_from 2606:4700::/32; #cfipv6</span><br><span class="line">set_real_ip_from 2803:f800::/32; #cfipv6</span><br><span class="line">set_real_ip_from 2c0f:f248::/32; #cfipv6</span><br><span class="line">set_real_ip_from 2a06:98c0::/29; #cfipv6</span><br><span class="line">#lock</span><br><span class="line">#使用以下任意一个即可</span><br><span class="line">#eal_ip_header CF-Connecting-IP; </span><br><span class="line">real_ip_header X-Forwarded-For;</span><br></pre></td></tr></table></figure><p>这里的 <code>CF-Connecting-IP</code> (CloudFlare额外提供) 是根据 CDN 服务商提供的返回IP地址的请求头而决定的，正常选择第二段即可，具体需要看 CDN 服务商的文档。</p><p>关于 <code>CF-Connecting-IP</code> 在这里有说明 <a href="https://support.cloudflare.com/hc/en-us/articles/200170986" rel="external nofollow noopener noreferrer" target="_blank">https://support.cloudflare.com/hc/en-us/articles/200170986</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CF-Connecting-IP</span><br><span class="line"></span><br><span class="line">To provide the client (visitor) IP address for every request to the origin, Cloudflare adds the CF-Connecting-IP header.</span><br><span class="line">&quot;CF-Connecting-IP: A.B.C.D&quot;</span><br><span class="line">Where A.B.C.D is the client&apos;s IP address, also known as the original visitor IP address.</span><br></pre></td></tr></table></figure><p>经过这样的简单配置，后端NGINX应该就可以正常获取IP地址了，但是 CDN 服务商增加或者更换节点节点地址都是会变动的怎么办呢？别急往下看</p><h2 id="0x04-自动获取节点列表"><a href="#0x04-自动获取节点列表" class="headerlink" title="0x04 自动获取节点列表"></a>0x04 自动获取节点列表</h2><p>上面说过每个 CDN 服务商都会在某个页面提供节点地址，例如 <a href="https://www.cloudflare.com/ips-v4" rel="external nofollow noopener noreferrer" target="_blank">CloudFlare v4 节点地址</a> <a href="https://www.cloudflare.com/ips-v6" rel="external nofollow noopener noreferrer" target="_blank">CloudFlare V6 节点地址</a> CloudFlare比较实在提供了纯文本版的节点列表，如果不是纯节点地址网页就要写正则匹配了。好了条件都有了，我们来写个脚本定时GET页面并抓到节点列表自动写到 Nginx 的配置文件上。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">/bin/sbin</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">变量设定</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Nginx配置文件</span></span><br><span class="line">nginx=/etc/nginx/conf/nginx.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">临时文件夹</span></span><br><span class="line">mude=/home/data/shell/dat/cloudflare</span><br><span class="line"><span class="meta">#</span><span class="bash">日志文件</span></span><br><span class="line">log=/home/data/shell/log/cloudflare.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">初始化</span></span><br><span class="line">oneup4=0</span><br><span class="line">oneup6=0</span><br><span class="line">updata=0</span><br><span class="line">if [ ! -d "$mude" ]; then</span><br><span class="line">  sudo mkdir $mude</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">获取最新IPV4、IPV6地址</span></span><br><span class="line">sudo wget -q https://www.cloudflare.com/ips-v4 -O $mude/ipv4.cf &gt; $log</span><br><span class="line">sudo wget -q https://www.cloudflare.com/ips-v6 -O $mude/ipv6.cf &gt; $log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">判断是否第一次执行脚本</span></span><br><span class="line">if [ ! -e "$mude/ipv4" ]; then</span><br><span class="line">  oneup4=1</span><br><span class="line">  sudo cp $mude/ipv4.cf $mude/ipv4 &gt; $log</span><br><span class="line">fi</span><br><span class="line">if [ ! -e "$mude/ipv6" ]; then</span><br><span class="line">  oneup6=1</span><br><span class="line">  sudo cp $mude/ipv6.cf $mude/ipv6 &gt; $log</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">更新动作</span></span><br><span class="line">diff -q $mude/ipv4 $mude/ipv4.cf &gt; $log</span><br><span class="line">if [ $? != 0 -o $oneup4 == 1 ]; then</span><br><span class="line">    sudo sed -i 's/^/        set_real_ip_from &amp;/g' $&#123;mude&#125;/ipv4 &gt; $log</span><br><span class="line">    sudo sed -i 's/$/; #cfipv4&amp;/g' $mude/ipv4 &gt; $log</span><br><span class="line">    sudo sed -i '/#cfipv4/d' $&#123;nginx&#125; &gt; $log</span><br><span class="line">    # 此处手动更改</span><br><span class="line">    sudo sed -i '/#cfip4/r /home/data/shell/dat/cloudflare/ipv4' $&#123;nginx&#125; &gt; $log</span><br><span class="line">    updata=1</span><br><span class="line">fi</span><br><span class="line">diff -q $mude/ipv6 $mude/ipv6.cf &gt; $log</span><br><span class="line">if [ $? != 0 -o $oneup6 == 1 ]; then</span><br><span class="line">    sudo sed -i 's/^/        set_real_ip_from &amp;/g' $&#123;mude&#125;/ipv6 &gt; $log</span><br><span class="line">    sudo sed -i 's/$/; #cfipv6&amp;/g' $&#123;mude&#125;/ipv6 &gt; $log</span><br><span class="line">    sudo sed -i '/#cfipv6/d' $&#123;nginx&#125; &gt; $log</span><br><span class="line">    # 此处手动更改</span><br><span class="line">    sudo sed -i '/#cfip6/r /home/data/shell/dat/cloudflare/ipv6' $&#123;nginx&#125; &gt; $log</span><br><span class="line">    updata=1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">文件更新后重载Nginx服务器</span></span><br><span class="line">if [ $updata == 1 ]; then</span><br><span class="line">    sudo /etc/init.d/nginx force-reload &gt; $log</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">重新归档数据已备下次判断</span></span><br><span class="line">sudo cp $mude/ipv4.cf $mude/ipv4 &gt; $log</span><br><span class="line">sudo cp $mude/ipv6.cf $mude/ipv6 &gt; $log</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>简单介绍一下脚本流程：</p><div id="flowchart-0" class="flow-chart"></div><br><script src="//cdn.bootcss.com/raphael/2.2.7/raphael.min.js"></script><script src="//cdn.bootcss.com/flowchart/1.7.0/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display:none">st=>start: Starte=>end: ENDop1=>operation: 获取最新节点列表op2=>operation: 判断临时文件夹是否存在cond1=>condition: YESop3=>operation: 创建临时文件夹op4=>operation: 判断节点列表是否最新cond2=>condition: YESop5=>operation: 更新列表数据op6=>operation: 平滑重载Nginx服务st->op1op1->op2->cond1cond1(yes)->op4->cond2cond1(no)->op3(right)->op4cond2(yes)->econd2(no)->op5(right)->op6(right)->e</textarea><textarea id="flowchart-0-options" style="display:none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>var code=document.getElementById("flowchart-0-code").value,options=JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)),diagram=flowchart.parse(code);diagram.drawSVG("flowchart-0",options)</script><br><br><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/servar-cloudflare/">https://www.hscbook.com/article/servar-cloudflare/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;Linux 运营干货，关于如何在使用 Content Delivery Network (CDN) 内容分发网络后服务器既后端能正常获取客户端的真实IP。本篇文章以CloudFlare为例子实例讲解获取前端客户端真实IP的方法，万事开头难相信你会了这一招应该会举一反三吧！&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.hscbook.com/categories/linux/"/>
    
    
      <category term="linux" scheme="https://www.hscbook.com/tags/linux/"/>
    
      <category term="nginx" scheme="https://www.hscbook.com/tags/nginx/"/>
    
      <category term="cloudflare" scheme="https://www.hscbook.com/tags/cloudflare/"/>
    
      <category term="CDN" scheme="https://www.hscbook.com/tags/cdn/"/>
    
      <category term="realip" scheme="https://www.hscbook.com/tags/realip/"/>
    
  </entry>
  
  <entry>
    <title>树莓派海文SeaFile配置Nginx前端反代并启用HTTPS全攻略</title>
    <link href="https://www.hscbook.com/article/raspberrypi-seafile-conf/"/>
    <id>https://www.hscbook.com/article/raspberrypi-seafile-conf/</id>
    <published>2017-08-26T07:26:31.000Z</published>
    <updated>2017-08-26T07:26:33.207Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>很多小伙伴们不会Nginx反代SeaFile，抽空写个教程吧。这里教大家如何使用Nginx反代理海文SeaFile开源网盘，并且启用HTTPS开启HTTP2模式加速SeaFile，Nginx反代理有个好处是可以使用CDN加速，速度与安全肩并肩！<br><a id="more"></a></p></blockquote><h2 id="安装-SeaFile"><a href="#安装-SeaFile" class="headerlink" title="安装 SeaFile"></a>安装 SeaFile</h2><p>具体教程请看我的上一篇教程：<a href="https://www.hscbook.com/article/raspberrypi-seafile/">树莓派自搭建家庭云储存服务，海文SeaFile安装全攻略</a><br>或者查看官方英文文档（中文文档更新慢）：<a href="https://manual.seafile.com/deploy/" rel="external nofollow noopener noreferrer" target="_blank">Deploying Seafile under Linux</a></p><h2 id="建立-SeaFile-启动文件"><a href="#建立-SeaFile-启动文件" class="headerlink" title="建立 SeaFile 启动文件"></a>建立 SeaFile 启动文件</h2><p><strong>官方教程</strong><br>我们直接使用启动文件运行SeaFile，官方有提供启动文件<br><a href="https://manual.seafile.com/deploy/start_seafile_at_system_bootup.html" rel="external nofollow noopener noreferrer" target="_blank">Start Seafile at System Bootup</a><br>请查看 For systems using another init system than systemd 下的 Other Debian based Distributions</p><p><strong>本文教程</strong><br>建立 <code>/etc/init.d/seafile</code> 并修改下方关键信息复制到 <code>/etc/init.d/seafile</code> （需要把 <code>fastcgi=true</code> 设为 <strong>true</strong>）并赋予执行权限 <code>chmod 775 /etc/init.d/seafile</code><br><em>这里是我自己的启动文件，有稍微修改，可单独启动停止 seahub/seafile 服务</em><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">### BEGIN INIT INFO</span><br><span class="line"># Provides:          seafile</span><br><span class="line"># Required-Start:    $local_fs $remote_fs $network</span><br><span class="line"># Required-Stop:     $local_fs</span><br><span class="line"># Default-Start:     2 3 4 5</span><br><span class="line"># Default-Stop:      0 1 6</span><br><span class="line"># Short-Description: Starts Seafile Server</span><br><span class="line"># Description:       starts Seafile Server</span><br><span class="line">### END INIT INFO</span><br><span class="line"></span><br><span class="line"># 请将 user 改为你的Linux用户名</span><br><span class="line">user=root</span><br><span class="line"></span><br><span class="line"># 请将 script_path 改为你的 Seafile 文件安装路径</span><br><span class="line">seafile_dir=/data/ser/sof/seafile</span><br><span class="line">script_path=$&#123;seafile_dir&#125;/seafile-server-latest</span><br><span class="line">seafile_init_log=$&#123;seafile_dir&#125;/logs/seafile.init.log</span><br><span class="line">seahub_init_log=$&#123;seafile_dir&#125;/logs/seahub.init.log</span><br><span class="line"></span><br><span class="line"># 若使用 fastcgi, 请将其设置为true</span><br><span class="line">fastcgi=true</span><br><span class="line"># fastcgi 端口, 默认为 8000. </span><br><span class="line">fastcgi_port=8801</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">        start)</span><br><span class="line">                sudo -u $&#123;user&#125; $&#123;script_path&#125;/seafile.sh start &gt;&gt; $&#123;seafile_init_log&#125;</span><br><span class="line">                if [  $fastcgi = true ];</span><br><span class="line">                then</span><br><span class="line">                        sudo -u $&#123;user&#125; $&#123;script_path&#125;/seahub.sh start-fastcgi $&#123;fastcgi_port&#125; &gt;&gt; $&#123;seahub_init_log&#125;</span><br><span class="line">                else</span><br><span class="line">                        sudo -u $&#123;user&#125; $&#123;script_path&#125;/seahub.sh start &gt;&gt; $&#123;seahub_init_log&#125;</span><br><span class="line">                fi</span><br><span class="line">        ;;</span><br><span class="line">        webstart)</span><br><span class="line">                if [  $fastcgi = true ];</span><br><span class="line">                then</span><br><span class="line">                        sudo -u $&#123;user&#125; $&#123;script_path&#125;/seahub.sh start-fastcgi $&#123;fastcgi_port&#125; &gt;&gt; $&#123;seahub_init_log&#125;</span><br><span class="line">                else</span><br><span class="line">                        sudo -u $&#123;user&#125; $&#123;script_path&#125;/seahub.sh start &gt;&gt; $&#123;seahub_init_log&#125;</span><br><span class="line">                fi</span><br><span class="line">        ;;</span><br><span class="line">        filestart)</span><br><span class="line">                sudo -u $&#123;user&#125; $&#123;script_path&#125;/seafile.sh start &gt;&gt; $&#123;seafile_init_log&#125;</span><br><span class="line">        ;;</span><br><span class="line">        restart)</span><br><span class="line">                sudo -u $&#123;user&#125; $&#123;script_path&#125;/seafile.sh restart &gt;&gt; $&#123;seafile_init_log&#125;</span><br><span class="line">                if [  $fastcgi = true ];</span><br><span class="line">                then</span><br><span class="line">                        sudo -u $&#123;user&#125; $&#123;script_path&#125;/seahub.sh restart-fastcgi $&#123;fastcgi_port&#125; &gt;&gt; $&#123;seahub_init_log&#125;</span><br><span class="line">                else</span><br><span class="line">                        sudo -u $&#123;user&#125; $&#123;script_path&#125;/seahub.sh restart &gt;&gt; $&#123;seahub_init_log&#125;</span><br><span class="line">                fi</span><br><span class="line">        ;;</span><br><span class="line">        stop)</span><br><span class="line">                sudo -u $&#123;user&#125; $&#123;script_path&#125;/seafile.sh $1 &gt;&gt; $&#123;seafile_init_log&#125;</span><br><span class="line">                sudo -u $&#123;user&#125; $&#123;script_path&#125;/seahub.sh $1 &gt;&gt; $&#123;seahub_init_log&#125;</span><br><span class="line">        ;;</span><br><span class="line">        webstop)</span><br><span class="line">sudo -u $&#123;user&#125; $&#123;script_path&#125;/seahub.sh $1 &gt;&gt; $&#123;seahub_init_log&#125;</span><br><span class="line">        ;;</span><br><span class="line">        filestop)</span><br><span class="line">sudo -u $&#123;user&#125; $&#123;script_path&#125;/seafile.sh $1 &gt;&gt; $&#123;seafile_init_log&#125;</span><br><span class="line">        ;;</span><br><span class="line">        *)</span><br><span class="line">                echo &quot;Usage: /etc/init.d/seafile &#123;start|stop|restart|webstart|filestart|webstop|filestop&#125;&quot;</span><br><span class="line">                exit 1</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p></p><h2 id="修改-SeaFile-文件服务端口"><a href="#修改-SeaFile-文件服务端口" class="headerlink" title="修改 SeaFile 文件服务端口"></a>修改 SeaFile 文件服务端口</h2><p>启动文件修改的端口只是 SeaFile 的网页服务还要修改文件服务的端口<br>修改安装目录 <code>conf</code> 文件夹下的 <code>seafile.conf</code> 文件，将服务地址修改为 <code>127.0.0.1</code>,端口修改为 <code>8802</code>，其他参数适当修改<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[fileserver]</span><br><span class="line">#Seafile 服务地址</span><br><span class="line">host = 127.0.0.1</span><br><span class="line">#Seafile 服务端口</span><br><span class="line">port = 8802</span><br><span class="line">#上传文件最大为多少.MB</span><br><span class="line">max_upload_size       = 256</span><br><span class="line">#最大下载目录限制为多少.MB</span><br><span class="line">max_download_dir_size = 512</span><br><span class="line">#文件索引线程</span><br><span class="line">max_indexing_threads  = 8</span><br><span class="line">#文件分割为多少.MB</span><br><span class="line">fixed_block_size      = 2</span><br><span class="line">#当用户上传文件时，文件服务器分配一个令牌来授权上传操作。</span><br><span class="line">#该令牌默认有效1小时。通过WAN上传大型文件时，上传时间可能会超过1小时。</span><br><span class="line">#您可以将令牌到期时间更改为更大的值。</span><br><span class="line">web_token_expire_time = 3600</span><br><span class="line">[quota]</span><br><span class="line">#默认每个用户的最大空间.GB</span><br><span class="line">#在社区版5.0.5以后，你可以以 KB, MB, GB, TB 为单位来设置默认容量。比如</span><br><span class="line">default = 1GB</span><br><span class="line">[history]</span><br><span class="line">#默认文件历史</span><br><span class="line">keep_days = 0</span><br><span class="line">#您可以从seahub下载文件夹作为zip存档</span><br><span class="line">#但Windows上的一些zip软件不支持UTF-8</span><br><span class="line">#您可以使用“windows_encoding”设置来解决此问题。</span><br><span class="line">[zip]</span><br><span class="line"># The file name encoding of the downloaded zip file.</span><br><span class="line">windows_encoding = iso-8859-1</span><br></pre></td></tr></table></figure><p></p><h2 id="修改-SeaFile-配置文件"><a href="#修改-SeaFile-配置文件" class="headerlink" title="修改 SeaFile 配置文件"></a>修改 SeaFile 配置文件</h2><p>修改安装目录 <code>conf</code> 文件夹下的 <code>seahub_settings.py</code> 文件添加两行代码<br></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SERVICE_URL = <span class="string">'https://www.demo.com:8443'</span></span><br><span class="line">FILE_SERVER_ROOT = <span class="string">'https://www.demo.com:8443/seafhttp'</span></span><br></pre></td></tr></table></figure><p></p><h2 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h2><p>我这里使用非网页常规端口8443，我的树莓派是在没用公网的环境需要经过服务器穿透而我的服务器已经有一个Nginx需要占用80，443端口所谓一山不能容二虎。这个根据自身情况而定<br>几个关键配置：<br>修改网页服务后端的 <code>proxy_pass http://127.0.0.1:8801;</code> 端口为启动文件处设置的端口地址<br>修改文件服务后端的 <code>proxy_pass http://127.0.0.1:8802;</code> 端口为seafile配置文件处设置的端口地址<br>修改静态文件后端的 <code>root /data/ser/sof/seafile/seafile-server-latest/seahub;</code> 为你的实际seafile安装地址的 <code>seahub</code> 文件夹（写错会导致页面样式文件和JS文件报404错误）<br>还有HTTPS证书文件和目录地址跟域名，自行修改为实际地址和域名。<br>因为我的网盘不对公所以我禁掉了搜索引擎的访问，有需要的请删除“## 禁止网络爬虫”处的配置，以免搜索引擎收录不了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">## 基础配置</span><br><span class="line">listen 8443 ssl http2;</span><br><span class="line">access_log off;</span><br><span class="line">error_log  /dev/null;</span><br><span class="line">server_name www.demo.com;</span><br><span class="line">root /data/web/dat/nginx/web/www.demo.com;</span><br><span class="line">index index.html;</span><br><span class="line"></span><br><span class="line"># certs sent to the client in SERVER HELLO are concatenated in ssl_certificate</span><br><span class="line">ssl_certificate /etc/letsencrypt/live/www.demo.com/fullchain.pem;</span><br><span class="line">ssl_certificate_key /etc/letsencrypt/live/www.demo.com/privkey.pem;</span><br><span class="line">ssl_session_timeout 1d;</span><br><span class="line">ssl_session_cache shared:SSL:50m;</span><br><span class="line">ssl_session_tickets off;</span><br><span class="line"></span><br><span class="line"># Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits</span><br><span class="line">ssl_dhparam /etc/letsencrypt/live/dhparam.pem;</span><br><span class="line"></span><br><span class="line"># intermediate configuration. tweak to your needs.</span><br><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_ciphers &apos;ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS&apos;;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line"># HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)</span><br><span class="line"># add_header Strict-Transport-Security max-age=15768000;</span><br><span class="line"></span><br><span class="line"># OCSP Stapling ---</span><br><span class="line"># fetch OCSP records from URL in ssl_certificate and cache them</span><br><span class="line">ssl_stapling on;</span><br><span class="line">ssl_stapling_verify on;</span><br><span class="line"></span><br><span class="line">## verify chain of trust of OCSP response using Root CA and Intermediate certs</span><br><span class="line">#ssl_trusted_certificate /etc/letsencrypt/live/www.demo.com/root_ca_cert_plus_intermediates;</span><br><span class="line"></span><br><span class="line">## 解析 OCSP 域名的服務器</span><br><span class="line">resolver 8.8.8.8 8.8.4.4;</span><br><span class="line"></span><br><span class="line">## 禁止网络爬虫</span><br><span class="line">if ($http_user_agent ~* &quot;qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot&quot;) </span><br><span class="line">&#123; return 403; &#125;</span><br><span class="line"></span><br><span class="line">## 禁止非法访问</span><br><span class="line">location /.well-known &#123;&#125;</span><br><span class="line">#location / &#123;return 500;&#125;</span><br><span class="line"></span><br><span class="line">## 网页服务后端</span><br><span class="line">proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">location / &#123;</span><br><span class="line">fastcgi_pass    127.0.0.1:8801;</span><br><span class="line">fastcgi_param   SCRIPT_FILENAME     $document_root$fastcgi_script_name;</span><br><span class="line">fastcgi_param   PATH_INFO           $fastcgi_script_name;</span><br><span class="line">fastcgi_param   SERVER_PROTOCOL     $server_protocol;</span><br><span class="line">fastcgi_param   QUERY_STRING        $query_string;</span><br><span class="line">fastcgi_param   REQUEST_METHOD      $request_method;</span><br><span class="line">fastcgi_param   CONTENT_TYPE        $content_type;</span><br><span class="line">fastcgi_param   CONTENT_LENGTH      $content_length;</span><br><span class="line">fastcgi_param   SERVER_ADDR         $server_addr;</span><br><span class="line">fastcgi_param   SERVER_PORT         $server_port;</span><br><span class="line">fastcgi_param   SERVER_NAME         $server_name;</span><br><span class="line">fastcgi_param   REMOTE_ADDR         $remote_addr;</span><br><span class="line">fastcgi_param   HTTPS               on;</span><br><span class="line">fastcgi_param   HTTP_SCHEME         https;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 文件服务后端</span><br><span class="line">location /seafhttp &#123;</span><br><span class="line">rewrite ^/seafhttp(.*)$ $1 break;</span><br><span class="line">proxy_pass http://127.0.0.1:8802;</span><br><span class="line">proxy_connect_timeout  36000s;</span><br><span class="line">proxy_read_timeout  36000s;</span><br><span class="line">proxy_send_timeout  36000s;</span><br><span class="line">send_timeout  36000s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">## 静态文件后端</span><br><span class="line">location /static &#123;</span><br><span class="line">rewrite ^/static(.*)$ /media$1 break;</span><br><span class="line">root /data/ser/sof/seafile/seafile-server-latest/seahub;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="启动-Seafile"><a href="#启动-Seafile" class="headerlink" title="启动 Seafile"></a>启动 Seafile</h2><p>启动 Seafile <code>sudo /etc/init.d/seafile start</code><br>启动 Nginx <code>sudo /etc/init.d/nginx start</code><br>设置Seafile开机启动 <code>sudo update-rc.d seafile defaults</code><br>设置Seafile开机启动 <code>sudo update-rc.d nginx defaults</code></p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>静态文件后端的 <code>seahub</code> 目录下的文件可以整个CP到<a href="https://console.upyun.com/register/?invite=BJh32kP_Z" rel="external nofollow noopener noreferrer" target="_blank">又拍云</a>或者<a href="https://portal.qiniu.com/signup?code=3li4q6kpexd1u" rel="external nofollow noopener noreferrer" target="_blank">七牛云</a>后由Nginx重定向即可实现半CDN加速。</p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/raspberrypi-seafile-conf/">https://www.hscbook.com/article/raspberrypi-seafile-conf/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;很多小伙伴们不会Nginx反代SeaFile，抽空写个教程吧。这里教大家如何使用Nginx反代理海文SeaFile开源网盘，并且启用HTTPS开启HTTP2模式加速SeaFile，Nginx反代理有个好处是可以使用CDN加速，速度与安全肩并肩！&lt;br&gt;
    
    </summary>
    
      <category term="Geek" scheme="https://www.hscbook.com/categories/geek/"/>
    
    
      <category term="nginx" scheme="https://www.hscbook.com/tags/nginx/"/>
    
      <category term="RaspBerryPi" scheme="https://www.hscbook.com/tags/raspberrypi/"/>
    
      <category term="Geek" scheme="https://www.hscbook.com/tags/geek/"/>
    
      <category term="seafile" scheme="https://www.hscbook.com/tags/seafile/"/>
    
      <category term="Cloud" scheme="https://www.hscbook.com/tags/cloud/"/>
    
  </entry>
  
  <entry>
    <title>树莓派自搭建家庭云储存服务，海文SeaFile安装全攻略</title>
    <link href="https://www.hscbook.com/article/raspberrypi-seafile/"/>
    <id>https://www.hscbook.com/article/raspberrypi-seafile/</id>
    <published>2017-06-14T04:42:58.000Z</published>
    <updated>2017-09-06T14:04:37.741Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作为街拍党的我会经常备份相册到云方便随时随地同步到宿舍和家里的电脑，而国内支持手机相册备份的云服务要么就限速限空间老铁实在是不能忍受了。召唤树莓派！是时候搭建个私人家庭网盘了，对比了两家较大名气的开源云服务SeaFile和OwnCloud，我选择了SeaFile，由于树莓派在内网，穿透的问题6月的时候搭建了个评论服务器刚好资源较空闲可以用来内网穿透到树莓派。<br><a id="more"></a></p></blockquote><h2 id="搭建Seafile"><a href="#搭建Seafile" class="headerlink" title="搭建Seafile"></a>搭建Seafile</h2><h3 id="依赖环境准备"><a href="#依赖环境准备" class="headerlink" title="依赖环境准备"></a>依赖环境准备</h3><p>在你准备搭建的时候建议先仔细阅读一下官方的英文文档（中文文档不全）：<a href="https://manual.seafile.com/develop/index.html" rel="external nofollow noopener noreferrer" target="_blank">SeaFile Documents</a><br>本文档针对有一定Linux的人员阅读，并不是傻瓜教程因为官方文档已经说得非常详细了，但是因为官方文档是通用教程有些地方可能不适用于树莓派，本文对搭建方法简单带过，着重讲不适用于树莓派的地方，和我搭建过程中的疑难杂症<br><strong>1. 安装依赖（摘抄官方文档）</strong><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apt-get install python2.7 libpython2.7 python-setuptools python-imaging python-ldap python-urllib3 sqlite3</span></span><br></pre></td></tr></table></figure><p></p><p><strong>2. 建立主工作文件夹</strong><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">在一个你需要放置SeaFile的文件夹建立一个父文件夹，所有操作均在此文件夹进行</span></span><br><span class="line">mkdir seafile </span><br><span class="line">cd seafile</span><br></pre></td></tr></table></figure><p></p><h3 id="下载树莓派版安装包"><a href="#下载树莓派版安装包" class="headerlink" title="下载树莓派版安装包"></a>下载树莓派版安装包</h3><p><a href="https://github.com/haiwen/seafile-rpi/releases" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/haiwen/seafile-rpi/releases</a><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载</span></span><br><span class="line">wget https://github.com/haiwen/seafile-rpi/releases/download/v6.0.9/seafile-server_6.0.9_stable_pi.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar zxvf seafile-server_6.0.9_stable_pi.tar.gz</span><br></pre></td></tr></table></figure><p></p><h3 id="安装Seafile"><a href="#安装Seafile" class="headerlink" title="安装Seafile"></a>安装Seafile</h3><p>程序会自行检测依赖环境是否安装若不报错会自动进入安装程序，接下来按照安装程序的提示分别输入 <em>网站名称</em>、 <em>服务地址</em> 、 <em>数据文件夹地址</em> 就可以了安装程序很完善不再另行解释。<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd seafile-server-6.0.9</span><br><span class="line">./setup-seafile.sh</span><br></pre></td></tr></table></figure><p></p><h3 id="Seafile的配置"><a href="#Seafile的配置" class="headerlink" title="Seafile的配置"></a>Seafile的配置</h3><p><a href="https://manual.seafile.com/config/ccnet-conf.html" rel="external nofollow noopener noreferrer" target="_blank">https://manual.seafile.com/config/ccnet-conf.html</a><br><a href="https://manual.seafile.com/config/seahub_settings_py.html" rel="external nofollow noopener noreferrer" target="_blank">https://manual.seafile.com/config/seahub_settings_py.html</a><br>着重看<code>conf</code>文件夹的 <code>seafile.conf</code>和<code>seahub_settings.py</code>配置文件<code>ccnet.conf</code>文件中的配置数据已经逐步移动到<code>seahub_settings.py</code>了,<code>seahub_settings.pyc</code>是缓存文件</p><h3 id="默认的服务端口更改"><a href="#默认的服务端口更改" class="headerlink" title="默认的服务端口更改"></a>默认的服务端口更改</h3><p>默认端口<code>8000</code>是网页服务端口，<code>8082</code>是文件服务端口<br>修改 <code>seafile.conf</code> 文件中的两个<code>port:</code>更改端口<br>如果修改了端口需要注意添加 <code>SERVICE_URL=&quot;http/s://服务地址：端口&quot;</code> 和 <code>FILE_SERVER_ROOT=&quot;http/s://服务地址：端口/seafhttp&quot;</code> 到 <code>seahub_settings.py</code> 配置文件中，并且文件服务端口的修改要么就保持默认要么就要与网页服务端口同步一致（针对经过Nginx反代的Seafile，由自带的网页服务提供的网页不建议修改）</p><p>例如服务地址：<a href="https://www.hscbook.com">https://www.hscbook.com</a> 网页端口：8111 文件服务端口：8111<br></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#seafile.conf</span></span><br><span class="line">[fileserver]</span><br><span class="line"><span class="comment">#服务地址</span></span><br><span class="line">host = 0.0.0.0</span><br><span class="line"><span class="comment">#Seafile 服务端口</span></span><br><span class="line">port = 8111</span><br><span class="line">[seahub]</span><br><span class="line"><span class="comment">#SeaHub 服务端口</span></span><br><span class="line"><span class="attribute">port</span>=8111</span><br></pre></td></tr></table></figure><p></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#seahub_settings.py</span></span><br><span class="line"><span class="attr">SERVICE_URL</span> = <span class="string">'https://www.hscbook.com:8111'</span></span><br><span class="line"><span class="attr">FILE_SERVER_ROOT</span> = <span class="string">'https://www.hscbook.com:8111/seafhttp'</span></span><br></pre></td></tr></table></figure><h3 id="Seafile-自启动"><a href="#Seafile-自启动" class="headerlink" title="Seafile 自启动"></a>Seafile 自启动</h3><p><a href="https://manual.seafile.com/deploy/start_seafile_at_system_bootup.html" rel="external nofollow noopener noreferrer" target="_blank">https://manual.seafile.com/deploy/start_seafile_at_system_bootup.html</a><br>在官方文档获取启动脚本并修改参数，上传到<code>/etc/init.d/seafile-server</code>赋予执行权限<br>运行：<code>chkconfig --add seafile-server</code></p><h2 id="安装Memcached加速Seafile"><a href="#安装Memcached加速Seafile" class="headerlink" title="安装Memcached加速Seafile"></a>安装Memcached加速Seafile</h2><h3 id="依赖环境准备-1"><a href="#依赖环境准备-1" class="headerlink" title="依赖环境准备"></a>依赖环境准备</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gcc make binutils python python-all-dev</span><br></pre></td></tr></table></figure><h3 id="编译Memcached"><a href="#编译Memcached" class="headerlink" title="编译Memcached"></a>编译Memcached</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">从官方下载源码</span></span><br><span class="line">wget http://memcached.org/latest</span><br><span class="line"><span class="meta">#</span><span class="bash">重命名（查看下载信息修改版本号）</span></span><br><span class="line">mv latest memcached-1.x.x.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash">解压缩</span></span><br><span class="line">tar -zxvf memcached-1.x.x.tar.gz</span><br><span class="line">cd memcached-1.x.x.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash">编译</span></span><br><span class="line">./configure --prefix=/usr/local/memcached &amp;&amp; make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure><h3 id="编译libmemcached"><a href="#编译libmemcached" class="headerlink" title="编译libmemcached"></a>编译libmemcached</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">从官方下载源码</span></span><br><span class="line">wget https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash">解压缩</span></span><br><span class="line">tar zxf libmemcached-1.0.18.tar.gz</span><br><span class="line">cd libmemcached-1.0.18</span><br><span class="line"><span class="meta">#</span><span class="bash">编译 （这个树莓派编译要超级久）</span></span><br><span class="line">./configure --prefix=/usr/local/libmemcached</span><br><span class="line">make &amp;&amp;make install</span><br></pre></td></tr></table></figure><h3 id="安装Python环境的客户端"><a href="#安装Python环境的客户端" class="headerlink" title="安装Python环境的客户端"></a>安装Python环境的客户端</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LIBMEMCACHED=/usr/local/libmemcached pip install pylibmc</span><br><span class="line">sudo pip install django-pylibmc</span><br></pre></td></tr></table></figure><h3 id="修改Seafile配置文件开启缓存"><a href="#修改Seafile配置文件开启缓存" class="headerlink" title="修改Seafile配置文件开启缓存"></a>修改Seafile配置文件开启缓存</h3><p>打开<code>seahub_settings.py</code>添加<br></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#######################################################</span><br><span class="line">##  启用MemCached缓存</span><br><span class="line">#######################################################</span><br><span class="line">CACHES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django_pylibmc.memcached.PyLibMCCache'</span>,</span><br><span class="line">        <span class="string">'LOCATION'</span>: <span class="string">'127.0.0.1:11211'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>运行Memcached<br><code>sudo /usr/bin/memcached -d -m 64m -l 127.0.0.1 -p 11211 -u pi -d</code><br>最后重启Seafile服务就可以了</p><h3 id="自启动Memcached"><a href="#自启动Memcached" class="headerlink" title="自启动Memcached"></a>自启动Memcached</h3><p>修改下面的参数，并上传到<code>/etc/init.d/memcached</code>赋予执行权限<br>运行：<code>chkconfig --add memcached</code><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">! /bin/sh</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## BEGIN INIT INFO</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Provides:          memcached</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Required-Start:    <span class="variable">$remote_fs</span> <span class="variable">$syslog</span> <span class="variable">$time</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Required-Stop:     <span class="variable">$remote_fs</span> <span class="variable">$syslog</span> <span class="variable">$time</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default-Stop:      </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Short-Description: starts the memcached server</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Description:       starts memcached using start-stop-daemon</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## END INIT INFO</span></span></span><br><span class="line"> </span><br><span class="line">PATH=/opt/bin:/opt/sbin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">PIDFILE=/run/memcached.pid</span><br><span class="line">NAME=memcached</span><br><span class="line">RUNAS=pi</span><br><span class="line"></span><br><span class="line">EXEC=/usr/local/memcached/bin/memcached</span><br><span class="line">EXEC_OPTS="-p 11211 -m 64m -d"</span><br><span class="line"> </span><br><span class="line">case "$1" in</span><br><span class="line">  start)</span><br><span class="line">        echo "Starting $NAME"</span><br><span class="line">        start-stop-daemon --start --chuid $RUNAS --quiet --background --make-pidfile --pidfile $PIDFILE \</span><br><span class="line">                --exec $EXEC -- $EXEC_OPTS</span><br><span class="line">        ;;</span><br><span class="line">  stop)</span><br><span class="line">        echo "Stopping $NAME"</span><br><span class="line">        start-stop-daemon --stop --quiet --pidfile $PIDFILE \</span><br><span class="line">                --exec $EXEC</span><br><span class="line">        ;;</span><br><span class="line">  restart)</span><br><span class="line">        echo "Restarting $NAME"</span><br><span class="line">        start-stop-daemon --stop --quiet --pidfile $PIDFILE \</span><br><span class="line">                --exec $EXEC</span><br><span class="line">sleep 1</span><br><span class="line">        start-stop-daemon --start --quiet --background --make-pidfile --pidfile $PIDFILE \</span><br><span class="line">                --exec $EXEC -- $EXEC_OPTS</span><br><span class="line">        ;;</span><br><span class="line">  *)</span><br><span class="line">        N=/etc/init.d/$NAME</span><br><span class="line">        echo "Usage: $N &#123;start|stop|restart&#125;" &gt;&amp;2</span><br><span class="line">        exit 1</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line"> </span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p></p><h2 id="Nginx-反代理Seafile并CDN加速"><a href="#Nginx-反代理Seafile并CDN加速" class="headerlink" title="Nginx 反代理Seafile并CDN加速"></a>Nginx 反代理Seafile并CDN加速</h2><p>Seafile 的静态文件挺大的，每次都回源好心疼我的流量，上官方论坛、谷歌都没有找到有用的教程就只能自己研究了。我的环境有点特殊，因为树莓派是经过内网穿透到VPS进行外网访问的端口不是默认的80，443端口，这表示我不能用CDN加速了（大多数的CDN都是只能加速80，443流量的）有天逛谷歌无意看到一篇Cloudflare的文章：<a href="https://support.cloudflare.com/hc/en-us/articles/200169156-Which-ports-will-Cloudflare-work-with-" rel="external nofollow noopener noreferrer" target="_blank">https://support.cloudflare.com/hc/en-us/articles/200169156-Which-ports-will-Cloudflare-work-with-</a>发现Cloudflare可以反代理非80，443端口这大法简直贼溜。<br>HTTP专用端口：80，8080，8880，2052，2082，2086，2095<br>HTTPS专用端口：443，2053，2083，2087，2096，8443<br>专用端口的意思是比如你用2053端口，那么从 【 <strong>用户</strong> 到 <strong>Cloudflare</strong> 到 <strong>源服务器</strong> 】 必须全程HTTPS，任何一环使用HTTP都是不允许的。</p><h2 id="安装Srafile后头像无法正常显示"><a href="#安装Srafile后头像无法正常显示" class="headerlink" title="安装Srafile后头像无法正常显示"></a>安装Srafile后头像无法正常显示</h2><p>可能是因为我的环境的问题，第一次安装Seafile后头像无法显示，上传头像显示<strong>Page unavailable</strong>删掉文件重新下载安装也没用，上官方<a href="https://bbs.seafile.com/t/seafile/3549" rel="external nofollow noopener noreferrer" target="_blank">发帖</a>提问无果，最后还是自己根据官方的文档上的目录结构检查目录发现avatars目录链接文件存在异常。<br>正常情况<code>/seafile-server-latest/seahub/media/avatars</code> 目录是个链接文件指向 -&gt; <code>/seahub-data/avatars</code>，并且<code>/seahub-data/avatars</code>存放着默认头像<br>我分别用<code>ln</code>命令查看了两个目录，发现<code>/seahub-data/avatars</code> 也是个链接文件并指向 -&gt; <code>/seafile-server-latest/seahub/media/avatars</code> 这是搞事情啊，两个互相指向？</p><h3 id="处理方法"><a href="#处理方法" class="headerlink" title="处理方法"></a>处理方法</h3><p>分别在SSH（FTP查看不了失效的链接文件）把两个avatars链接文件RM掉。再在下载的安装包重新提取avatars文件夹放到 <code>./seahub-data</code> 并且在<code>./seafile-server-latest/seahub/media/avatars</code> 创建链接文件并指向 <code>./seahub-data/avatars</code> 清空缓存然后重启SeaFile</p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>为了搭建Seafile我用了一个礼拜，遇到很多的疑难杂症都是自己Google的。实在自己解决不了的可以上<a href="https://bbs.seafile.com" rel="external nofollow noopener noreferrer" target="_blank">官方论坛</a>或者直接在下面<strong>留言</strong>也行，我能帮的我都尽量。<br>留言开通了留言审核请<strong>正确填写邮箱</strong>，填写的<strong>邮箱不对外公开并且是经过加密</strong>的，不用担心垃圾邮件服务器的扫描（我也很厌恶垃圾邮件）！</p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/raspberrypi-seafile/">https://www.hscbook.com/article/raspberrypi-seafile/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;作为街拍党的我会经常备份相册到云方便随时随地同步到宿舍和家里的电脑，而国内支持手机相册备份的云服务要么就限速限空间老铁实在是不能忍受了。召唤树莓派！是时候搭建个私人家庭网盘了，对比了两家较大名气的开源云服务SeaFile和OwnCloud，我选择了SeaFile，由于树莓派在内网，穿透的问题6月的时候搭建了个评论服务器刚好资源较空闲可以用来内网穿透到树莓派。&lt;br&gt;
    
    </summary>
    
      <category term="Geek" scheme="https://www.hscbook.com/categories/geek/"/>
    
    
      <category term="nginx" scheme="https://www.hscbook.com/tags/nginx/"/>
    
      <category term="RaspBerryPi" scheme="https://www.hscbook.com/tags/raspberrypi/"/>
    
      <category term="Geek" scheme="https://www.hscbook.com/tags/geek/"/>
    
      <category term="seafile" scheme="https://www.hscbook.com/tags/seafile/"/>
    
      <category term="seahub" scheme="https://www.hscbook.com/tags/seahub/"/>
    
      <category term="memcached" scheme="https://www.hscbook.com/tags/memcached/"/>
    
  </entry>
  
  <entry>
    <title>一劳永逸，搭建ISSO开源评论系统全攻略教程</title>
    <link href="https://www.hscbook.com/article/isso-comment/"/>
    <id>https://www.hscbook.com/article/isso-comment/</id>
    <published>2017-06-05T10:11:47.000Z</published>
    <updated>2017-11-12T16:18:41.603Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>自己的评论系统才是最好的评论系统，前段时间多说关闭了评论系统切换到网易云跟帖毕竟是Beta项目反垃圾系统太严格了，动不动就审核失败而且自己还看不到被系统删除的留言，而且目前在云跟帖的群里的管理员说目前该项目正在暂停状态意思云跟帖也随时会关闭，果断自搭建了个留言系统，综合实验了各个开源系统最终ISSO的系统最稳定，唯一的遗憾就是没有后台系统<br><a id="more"></a></p></blockquote><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><ol><li>支持Python的环境</li><li>支持STMP的邮件服务器</li></ol><h2 id="环境依赖"><a href="#环境依赖" class="headerlink" title="环境依赖"></a>环境依赖</h2><p>摘抄官方（需要翻墙）<a href="https://posativ.org/isso/docs/install/" rel="external nofollow noopener noreferrer" target="_blank">https://posativ.org/isso/docs/install/</a><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">for</span> Debian/Ubuntu</span></span><br><span class="line">sudo apt-get install python-setuptools python-virtualenv</span><br><span class="line"><span class="meta">#</span><span class="bash"> Fedora/Red Hat</span></span><br><span class="line">sudo yum install python-setuptools python-virtualenv</span><br></pre></td></tr></table></figure><p></p><h2 id="安装ISSO-PIP包"><a href="#安装ISSO-PIP包" class="headerlink" title="安装ISSO (PIP包)"></a>安装ISSO (PIP包)</h2><p>先安装 Python 的 PIP包管理工具<br><a href="http://www.pip-installer.org/en/latest/" rel="external nofollow noopener noreferrer" target="_blank">http://www.pip-installer.org/en/latest/</a><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装到根Python目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Debian /usr/<span class="built_in">local</span>/lib/python2.7/dist-packages</span></span><br><span class="line">pip install isso</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">安装到指定目录</span></span><br><span class="line">source /opt/isso/bin/activate</span><br><span class="line">pip install isso</span><br></pre></td></tr></table></figure><p></p><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>安装目录下有默认的配置文件 <code>defaults.ini</code> 把它拷贝到任意目录。直接修改也是可以的。<br>参数详解 <a href="https://posativ.org/isso/docs/configuration/server/" rel="external nofollow noopener noreferrer" target="_blank">https://posativ.org/isso/docs/configuration/server/</a><br>创建服务端配置文件 <code>nano /home/isso.conf</code><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">;基础设置</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">[general]</span><br><span class="line">;储存评论的SQLite数据库文件</span><br><span class="line">dbpath = /home/comments.db</span><br><span class="line">;允许使用的网站</span><br><span class="line">host =</span><br><span class="line">    http://www.hscbook.com/</span><br><span class="line">    https://www.hscbook.com/</span><br><span class="line">;允许评论发布后多少分钟内可编辑</span><br><span class="line">;0代表关闭（不建议开启）</span><br><span class="line">max-age  =  0</span><br><span class="line">;新评论的通知（审核）方式：smtp，stdout</span><br><span class="line">;smtp是每有一条评论就通过SMTP邮件服务器发送邮件</span><br><span class="line">;stdout是每有一条评论就通过SSH控制台输出</span><br><span class="line">;建议使用SMTP方式，可通过邮件管理评论</span><br><span class="line">notify   =  smtp </span><br><span class="line">;系统日志的文件地址</span><br><span class="line">log-file =  /home/ruan/isso/isso.log</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">; 邮件服务器</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">;SMTP邮件服务器地址</span><br><span class="line">[smtp] </span><br><span class="line">username = 用户名</span><br><span class="line">password = 密码</span><br><span class="line">host     = SMTP主机</span><br><span class="line">port     = SMTP端口</span><br><span class="line">;邮件编码（默认utf-8）</span><br><span class="line">;encoding: utf-8 </span><br><span class="line">;邮件加密方式</span><br><span class="line">security = ssl</span><br><span class="line">;通知（审核）邮件发送到哪里</span><br><span class="line">to       = mail@hscbook.com</span><br><span class="line">;邮件的标题和发送地址</span><br><span class="line">from     = &quot;HscBook 评论通知&quot; &lt;fas@hscbook.com&gt;</span><br><span class="line">;STMP服务器的连接超时时间</span><br><span class="line">timeout  = 15</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">; 评论审核</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">[moderation] </span><br><span class="line">;打开评论审核</span><br><span class="line">enabled      =  true</span><br><span class="line">;最大审核时间（超过这个时间评论会自动被删除）</span><br><span class="line">purge-after  =  3d</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">; 评论允许使用的元素标签</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">[markup]</span><br><span class="line">;markup插件</span><br><span class="line">options = superscript</span><br><span class="line">;允许使用的HTML标签</span><br><span class="line">allowed-elements = blockquote,br,code,del,em,h1,h2,h3,h4,h5,h6,hr,ins,p,pre,strong,table,tbody,thead,td,th</span><br><span class="line">;允许的HTML标签属性</span><br><span class="line">allowed-attributes = align</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">; 简单垃圾防御</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">[guard] </span><br><span class="line">;是否开启</span><br><span class="line">enabled         =  true</span><br><span class="line">;每个IP每分钟最大评论数</span><br><span class="line">ratelimit       =  2</span><br><span class="line">;评论回复次数</span><br><span class="line">direct-reply    =  3</span><br><span class="line">;是否允许回复自己</span><br><span class="line">reply-to-self   =  false</span><br><span class="line">;是否必须输入名称</span><br><span class="line">require-author  =  true</span><br><span class="line">;是否必须输入邮箱</span><br><span class="line">require-email   =  true</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">; 加密KEY</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">;对留言的邮箱地址进行加密</span><br><span class="line">[hash] </span><br><span class="line">salt       =  pdsTiOa86HkuLsa6Xsrtyfd8</span><br><span class="line">algorithm  =  pbkdf2</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">; 评论服务地址</span><br><span class="line">;;;;;;;;;;;;;;;;</span><br><span class="line">;对外服务的地址</span><br><span class="line">[server] </span><br><span class="line">;sock与http·二选一</span><br><span class="line">;SOCK地址</span><br><span class="line">;listen = unix:///tmp/isso.sock</span><br><span class="line">;http地址</span><br><span class="line">listen = http://0.0.0.0:8080/</span><br></pre></td></tr></table></figure><p></p><h2 id="在网站引用评论框"><a href="#在网站引用评论框" class="headerlink" title="在网站引用评论框"></a>在网站引用评论框</h2><h3 id="引用ISSO-JS文件"><a href="#引用ISSO-JS文件" class="headerlink" title="引用ISSO-JS文件"></a>引用ISSO-JS文件</h3><p><strong>在页尾 <code>footer</code> 添加处引用JS文件和客户端参数设置</strong><br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">data-isso</span>=<span class="string">"//0.0.0.0:8080/"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-css</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-lang</span>=<span class="string">"ru"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-reply-to-self</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-require-author</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-require-email</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-max-comments-top</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-max-comments-nested</span>=<span class="string">"5"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-reveal-on-click</span>=<span class="string">"5"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-avatar</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-avatar-bg</span>=<span class="string">"#f0f0f0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-avatar-fg</span>=<span class="string">"#9abf88 #5698c4 #e279a3 #9163b6 ..."</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-isso-vote</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-vote-levels</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">        <span class="attr">src</span>=<span class="string">"//0.0.0.0:8080/js/embed.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><p>参数详解 <a href="https://posativ.org/isso/docs/configuration/client/" rel="external nofollow noopener noreferrer" target="_blank">https://posativ.org/isso/docs/configuration/client/</a><br>|– 是否使用自带的CSS样式表<br>|–&gt; <code>data-isso-css=&quot;true&quot;</code><br>|– 默认语言<br>|–&gt; <code>data-isso-lang=&quot;ru&quot;</code><br>|– 是否允许回复自己（与服务端同步）<br>|–&gt; <code>data-isso-reply-to-self=&quot;false&quot;</code><br>|– 是否必须输入名称<br>|–&gt; <code>data-isso-require-author=&quot;false&quot;</code><br>|– 是否必须输入邮箱<br>|–&gt; <code>data-isso-require-email=&quot;false&quot;</code><br>|– 一页内最多显示多少评论<br>|–&gt; <code>data-isso-max-comments-top=&quot;10&quot;</code><br>|– 回复嵌套最大数<br>|–&gt; <code>data-isso-max-comments-nested=&quot;5&quot;</code><br>|– 显示“显示评论”的阈值<br>|–&gt; <code>data-isso-reveal-on-click=&quot;5&quot;</code><br>|– 是否使用像素头像<br>|–&gt; <code>data-isso-avatar=&quot;true&quot;</code><br>|– 头像的背景颜色<br>|–&gt; <code>data-isso-avatar-bg=&quot;#f0f0f0&quot;</code><br>|– 头像的颜色库（最多8个）<br>|–&gt; <code>data-isso-avatar-fg=&quot;#9abf88 #5698c4 #e279a3 #9163b6 ...&quot;</code><br>|– 开启评论的支持和反对<br>|–&gt; <code>data-isso-vote=&quot;true&quot;</code><br>|– 支持和反对的显示算法<br>|–&gt; <code>data-vote-levels=&quot;&quot;</code></p><h3 id="插入评论框与评论数"><a href="#插入评论框与评论数" class="headerlink" title="插入评论框与评论数"></a>插入评论框与评论数</h3><p>使用下面两个标签的前提是必须<strong><a href="#引用ISSO-JS文件">引用JS文件</a></strong><br>在文章页的评论框处插入ISSO评论框<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"isso-thread"</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><p>在列表页和其他的任意位置插入评论记数<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"需要显示评论数的文章地址#isso-thread"</span>&gt;</span>Comments<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><h2 id="启动ISSO"><a href="#启动ISSO" class="headerlink" title="启动ISSO"></a>启动ISSO</h2><p>输入：<code>isso -c /home/isso.conf run</code></p><h2 id="自启动ISSO脚本"><a href="#自启动ISSO脚本" class="headerlink" title="自启动ISSO脚本"></a>自启动ISSO脚本</h2><p>摘抄官方文档 <a href="https://posativ.org/isso/docs/install/" rel="external nofollow noopener noreferrer" target="_blank">https://posativ.org/isso/docs/install/</a><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## BEGIN INIT INFO</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Provides:          isso</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Required-Start:    <span class="variable">$local_fs</span> <span class="variable">$network</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default-Stop:      0 1 6</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Description:       lightweight Disqus alternative</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## END INIT INFO</span></span></span><br><span class="line"></span><br><span class="line">EXEC=/opt/isso/bin/isso</span><br><span class="line">EXEC_OPTS="-c /etc/isso.cfg run"</span><br><span class="line"></span><br><span class="line">RUNAS=isso</span><br><span class="line">PIDFILE=/var/run/isso.pid</span><br><span class="line"></span><br><span class="line">start() &#123;</span><br><span class="line">  echo 'Starting service…' &gt;&amp;2</span><br><span class="line">  start-stop-daemon --start --user "$RUNAS" --background --make-pidfile --pidfile $PIDFILE \</span><br><span class="line">                    --exec $EXEC -- $EXEC_OPTS</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop() &#123;</span><br><span class="line">  echo 'Stopping service…' &gt;&amp;2</span><br><span class="line">  start-stop-daemon --stop --user "$RUNAS" --pidfile $PIDFILE --exec $EXEC</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case "$1" in</span><br><span class="line">  start)</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">    stop</span><br><span class="line">    ;;</span><br><span class="line">  restart)</span><br><span class="line">    stop</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    echo "Usage: $0 &#123;start|stop|restart&#125;"</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p></p><h2 id="头像使用Gravatar"><a href="#头像使用Gravatar" class="headerlink" title="头像使用Gravatar"></a>头像使用Gravatar</h2><p>由于ISSO的作者担忧<a href="https://meta.stackexchange.com/questions/44717/is-gravatar-a-privacy-risk" rel="external nofollow noopener noreferrer" target="_blank">Gravatar的隐私泄露</a>反对Gravatar功能，但是github上有一个Pull requests可以自行编译而支持Gravatar的头像显示<br>源Pull requests：<a href="https://github.com/posativ/isso/pull/317" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/posativ/isso/pull/317</a><br>我的分支链接：<a href="https://github.com/Hscpro/isso" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/Hscpro/isso</a><br>不会用github就直接克隆我的GIT进行编译吧，编译教程<strong><a href="https://posativ.org/isso/docs/install/" rel="external nofollow noopener noreferrer" target="_blank">点这里</a></strong><br>请注意官方教程上的环境依赖！编译安装与直接安装环境要求不一样</p><h2 id="邮件回复通知"><a href="#邮件回复通知" class="headerlink" title="邮件回复通知"></a>邮件回复通知</h2><p>github上有一个Pull requests是实现邮件回复通知的提交<br><a href="https://github.com/posativ/isso/pull/50" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/posativ/isso/pull/50</a></p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p><strong>文章最后修订日期：2017-11-12 12:01:02</strong><br>启用了ISSO评论，并写了个备份脚本定期自动备份评论数据到云盘，从此腰也不疼，再也不用担心他方评论系统哪天人家心情不好来个关闭，搬评论数据甚至痛失数据的灾难了。<br>名称和邮箱必须填写（给你自己一个身份吧亲），我也开启了邮件地址加密，你填写的邮箱并不会被垃圾蜘蛛扫描</p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/isso-comment/">https://www.hscbook.com/article/isso-comment/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;自己的评论系统才是最好的评论系统，前段时间多说关闭了评论系统切换到网易云跟帖毕竟是Beta项目反垃圾系统太严格了，动不动就审核失败而且自己还看不到被系统删除的留言，而且目前在云跟帖的群里的管理员说目前该项目正在暂停状态意思云跟帖也随时会关闭，果断自搭建了个留言系统，综合实验了各个开源系统最终ISSO的系统最稳定，唯一的遗憾就是没有后台系统&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://www.hscbook.com/categories/hexo/"/>
    
    
      <category term="linux" scheme="https://www.hscbook.com/tags/linux/"/>
    
      <category term="hexo" scheme="https://www.hscbook.com/tags/hexo/"/>
    
      <category term="comment" scheme="https://www.hscbook.com/tags/comment/"/>
    
      <category term="isso" scheme="https://www.hscbook.com/tags/isso/"/>
    
  </entry>
  
  <entry>
    <title>Wannacry 蠕虫勒索(比特币)病毒补丁与免疫工具</title>
    <link href="https://www.hscbook.com/article/wannacry-patch/"/>
    <id>https://www.hscbook.com/article/wannacry-patch/</id>
    <published>2017-05-15T04:30:18.000Z</published>
    <updated>2018-06-24T05:54:31.978Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>席卷全球的WannaCry勒索病毒的影响仍在持续，全球多个国家受到网络攻击。目前病毒已经变种，尽快禁封相关协议端口并打上电脑漏洞补丁。<br><a id="more"></a></p></blockquote><h2 id="免疫工具"><a href="#免疫工具" class="headerlink" title="免疫工具"></a>免疫工具</h2><p>电脑管家团队免疫工具：<a href="http://guanjia.qq.com/wannacry/" rel="external nofollow noopener noreferrer" target="_blank">http://guanjia.qq.com/wannacry/</a><br>企业级IT团队研发免疫工具：<a href="https://eyun.baidu.com/s/3pKB0rcJ" rel="external nofollow noopener noreferrer" target="_blank">https://eyun.baidu.com/s/3pKB0rcJ</a> 密码：hscbook<br><strong>请注意：该补丁不是一次性的，打完补丁会有程序驻守后台实时防护，等风头过去了再删除</strong><br><img src="https://hscbook.b0.upaiyun.com/image/wannacry-patch/201705151253.jpg" alt="IT团队研发免疫工具"></p><h2 id="微软补丁"><a href="#微软补丁" class="headerlink" title="微软补丁"></a>微软补丁</h2><p>WIN7/10及Ser系列系统：<a href="https://technet.microsoft.com/zh-cn/library/security/MS17-010.aspx" rel="external nofollow noopener noreferrer" target="_blank">https://technet.microsoft.com/zh-cn/library/security/MS17-010.aspx</a><br>XP(P0-3)/WIN8系统补丁：<a href="http://www.catalog.update.microsoft.com/Search.aspx?q=KB4012598" rel="external nofollow noopener noreferrer" target="_blank">http://www.catalog.update.microsoft.com/Search.aspx?q=KB4012598</a></p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/wannacry-patch/">https://www.hscbook.com/article/wannacry-patch/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;席卷全球的WannaCry勒索病毒的影响仍在持续，全球多个国家受到网络攻击。目前病毒已经变种，尽快禁封相关协议端口并打上电脑漏洞补丁。&lt;br&gt;
    
    </summary>
    
      <category term="Share" scheme="https://www.hscbook.com/categories/share/"/>
    
    
      <category term="Wannacry" scheme="https://www.hscbook.com/tags/wannacry/"/>
    
      <category term="Loophole" scheme="https://www.hscbook.com/tags/loophole/"/>
    
      <category term="Patch" scheme="https://www.hscbook.com/tags/patch/"/>
    
  </entry>
  
  <entry>
    <title>树莓派安装 HAProxy 实现高可用高负载SS服务器线路负载均衡</title>
    <link href="https://www.hscbook.com/article/raspberrypi-haproxy/"/>
    <id>https://www.hscbook.com/article/raspberrypi-haproxy/</id>
    <published>2017-05-13T01:49:10.000Z</published>
    <updated>2017-06-17T10:06:09.061Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>服务商会有好几条线路提供，有时候某条线路会不稳定，需要手动切换线路。利用 HAProxy 可实现主备线路切换，并且可设置均衡负载让速度爆炸(需要服务商支持同时登陆)<br><a id="more"></a></p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>树莓派或香橙派类开发板</li><li>服务商线路若干条</li><li>需要一定的linux基础</li></ol><h2 id="安装-HAProxy"><a href="#安装-HAProxy" class="headerlink" title="安装 HAProxy"></a>安装 HAProxy</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo sudo apt-get update</span><br><span class="line">sudo apt-get install -y haproxy</span><br></pre></td></tr></table></figure><h2 id="配置-HAProxy"><a href="#配置-HAProxy" class="headerlink" title="配置 HAProxy"></a>配置 HAProxy</h2><p>详细配置说明可参考网络文章<br>HAProxy 用法详解 <a href="http://www.ttlsa.com/linux/haproxy-study-tutorial/" rel="external nofollow noopener noreferrer" target="_blank">http://www.ttlsa.com/linux/haproxy-study-tutorial/</a><br>HAProxy 配置示例 <a href="http://xstarcd.github.io/wiki/sysadmin/haproxy_confs.html" rel="external nofollow noopener noreferrer" target="_blank">http://xstarcd.github.io/wiki/sysadmin/haproxy_confs.html</a><br>这里贴出我的配置文件，自行修改后写入 <code>haproxy.cfg</code><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 程序参数</span></span></span><br><span class="line">global</span><br><span class="line">pidfile /var/run/haproxy.pid#PID文件，做进程守护使用</span><br><span class="line">user root#运行程序的用户</span><br><span class="line">group root#运行程序的用户组</span><br><span class="line">daemon#后台运行</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 服务器默认参数</span></span></span><br><span class="line">defaults</span><br><span class="line">mode tcp#默认的模式mode &#123; tcp|http|health &#125;，tcp是4层，http是7层 </span><br><span class="line">balance roundrobin#服务器均衡模式</span><br><span class="line">retries 2#两次连接失败就认为是服务器不可用 </span><br><span class="line">option redispatch#当serverId对应的服务器挂掉后，强制定向到其他健康的服务器 </span><br><span class="line">option abortonclose#当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接 </span><br><span class="line"><span class="meta">#</span><span class="bash">option dontlognull<span class="comment">#不记录健康检查日志信息</span></span></span><br><span class="line">maxconn 3200#最大连接数</span><br><span class="line">timeout connect 500ms#连接超时</span><br><span class="line">timeout client 3000ms#客户端超时</span><br><span class="line">timeout server 3000ms#服务器超时</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># FREE_日本服务器_三线不计量均衡线路双线计量备用线路</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> inter 1000 = 隔1000毫秒检测一次服务器是否正常</span></span><br><span class="line">listen FREE_SS_Japan</span><br><span class="line">        bind 0.0.0.0:8001       # 服务端口</span><br><span class="line">        server fss-jp1 hscbook.com:18750 check inter 1000 rise 2 fall 3#服务器地址与端口</span><br><span class="line">        server fss-jp2 hscbook.com:18750 check inter 1000 rise 2 fall 3#服务器地址与端口</span><br><span class="line">        server fss-jp3 hscbook.com:18750 check inter 1000 rise 2 fall 3#服务器地址与端口</span><br><span class="line">server fjp-bck hscbook.com:18750 check backup inter 5000 rise 2 fall 3#备用线路</span><br><span class="line">server fjp-bck hscbook.com:18750 check backup inter 5000 rise 2 fall 3#备用线路</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># FREE_美国服务器_四线不计量均衡线路双线计量备用线路</span></span></span><br><span class="line">listen FREE_SS_U.S.A</span><br><span class="line">        bind 0.0.0.0:8002</span><br><span class="line">        server fss-usa hscbook.com:18750 check inter 1000 rise 2 fall 3</span><br><span class="line">        server fss-us-dls hscbook.com.shidd.net:18750 check inter 1000 rise 2 fall 3</span><br><span class="line">        server fss-us-atl hscbook.com.shidd.net:18750 check inter 1000 rise 2 fall 3</span><br><span class="line">        server fss-us-nwk hscbook.com:18750 check inter 1000 rise 2 fall 3</span><br><span class="line">server fus-bck hscbook.com:18750 check backup inter 5000 rise 2 fall 3#备用线路</span><br><span class="line">server fus-bck hscbook.com:18750 check backup inter 5000 rise 2 fall 3#备用线路</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Metering_视频服务器_单线线不计量线路单线计量备用线路</span></span></span><br><span class="line">listen Metering_SS_Video</span><br><span class="line">        bind 0.0.0.0:8003</span><br><span class="line">        server mss-video hscbook.com:18750 check inter 1000 rise 2 fall 3</span><br><span class="line">        server mmv-bck hscbook.com:18750 check backup inter 5000 rise 2 fall 3#备用线路</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Latency_低延迟服务器_单线线不计量线路双线不计量备用线路</span></span></span><br><span class="line">listen Low_latency</span><br><span class="line">        bind 0.0.0.0:8004</span><br><span class="line">        server hk-http hscbook.com:25479 check inter 1000 rise 2 fall 3</span><br><span class="line">        server jp-bck hscbook.com:25479 check backup inter 5000 rise 2 fall 3#备用线路</span><br><span class="line">server jp-bck hscbook.com:25479 check backup inter 5000 rise 2 fall 3#备用线路</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 网页服务端</span></span></span><br><span class="line">listen Web_Service</span><br><span class="line">        bind 0.0.0.0:82#网页服务端口</span><br><span class="line">        mode http#接口协议</span><br><span class="line">        stats refresh 5s#自动刷新时间</span><br><span class="line">        stats uri  /#管理地址</span><br><span class="line">        stats auth hscbook:hscpro#账号密码</span><br><span class="line">        stats hide-version#隐藏版本</span><br><span class="line">        stats  admin if TRUE#验证通过则赋予管理权</span><br></pre></td></tr></table></figure><p></p><h3 id="先备份配置并写入"><a href="#先备份配置并写入" class="headerlink" title="先备份配置并写入"></a>先备份配置并写入</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.bak</span><br><span class="line">sudo nano /etc/haproxy/haproxy.cfg</span><br></pre></td></tr></table></figure><h2 id="重启-HAProxy"><a href="#重启-HAProxy" class="headerlink" title="重启 HAProxy"></a>重启 HAProxy</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service haproxy stop</span><br><span class="line">sudo service haproxy start</span><br></pre></td></tr></table></figure><h2 id="使用问题与技巧"><a href="#使用问题与技巧" class="headerlink" title="使用问题与技巧"></a>使用问题与技巧</h2><ol><li>账号密码和加密方式？<br>在客户端处填就可以了，就是把原来的地址和端口换成 bind 处的地址端口。</li><li>启动 HAPproxy 报错？<br>多启动几次试试看，不行就请检查配置文件</li></ol><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/raspberrypi-haproxy/">https://www.hscbook.com/article/raspberrypi-haproxy/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;服务商会有好几条线路提供，有时候某条线路会不稳定，需要手动切换线路。利用 HAProxy 可实现主备线路切换，并且可设置均衡负载让速度爆炸(需要服务商支持同时登陆)&lt;br&gt;
    
    </summary>
    
      <category term="Geek" scheme="https://www.hscbook.com/categories/geek/"/>
    
    
      <category term="linux" scheme="https://www.hscbook.com/tags/linux/"/>
    
      <category term="RaspBerryPi" scheme="https://www.hscbook.com/tags/raspberrypi/"/>
    
      <category term="Geek" scheme="https://www.hscbook.com/tags/geek/"/>
    
      <category term="HAProxy" scheme="https://www.hscbook.com/tags/haproxy/"/>
    
  </entry>
  
  <entry>
    <title>树莓派香橙派无线播放，实现DLNA与AirPlay协议无线音箱</title>
    <link href="https://www.hscbook.com/article/raspberrypi-audio/"/>
    <id>https://www.hscbook.com/article/raspberrypi-audio/</id>
    <published>2017-04-17T10:01:59.000Z</published>
    <updated>2018-06-24T05:54:31.976Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>改造树莓派、香橙派摇身一变无线WIFI音响在线播放，无需安装XBMC这个庞然大物也能实现DLNA和AirPlay双协议的WIFI音响，DLNA 实现于Gmrender-resurrect项目、AirPlay实现于Shairport项目<br><a id="more"></a></p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>拿出你放在角落里积灰的树莓派，扫扫灰尘，必要的时候再抚摸安慰一下？！哈哈哈</p><ol><li>选购一个降噪的USB声卡，树莓派的声噪有点惨不忍睹</li><li>选购一个干扰低的电源给树莓派供电</li><li>选购一个好点的音响并连接到树莓派</li><li>让树莓派有线/无线连接你到家WIFI</li><li>准备一个10速内存卡，并烧录官方系统</li></ol><p>DLNA 协议项目：<a href="https://github.com/hzeller/gmrender-resurrect" rel="external nofollow noopener noreferrer" target="_blank">gmrender-resurrect</a><br>AirPlay 协议项目：<a href="https://github.com/abrasive/shairport" rel="external nofollow noopener noreferrer" target="_blank">shairport</a></p><h2 id="必要环境"><a href="#必要环境" class="headerlink" title="必要环境"></a>必要环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install git</span></span><br></pre></td></tr></table></figure><h2 id="DLNA-协议"><a href="#DLNA-协议" class="headerlink" title="DLNA 协议"></a>DLNA 协议</h2><p>参考文档：<a href="https://github.com/hzeller/gmrender-resurrect/blob/master/INSTALL.md" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/hzeller/gmrender-resurrect/blob/master/INSTALL.md</a></p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p><code>gstreamer1.0-alsa</code> 可选为 <code>gstreamer1.0-pulseaudio</code> 这个要根据自己的环境而定，参考官方帮助文档 <a href="https://github.com/hzeller/gmrender-resurrect/blob/master/INSTALL.md" rel="external nofollow noopener noreferrer" target="_blank">gmrender-resurrect</a> 如果你不知道这是什么就无视这一段话。<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install libupnp-dev libgstreamer1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-alsa autoconf</span></span><br></pre></td></tr></table></figure><p></p><h3 id="安装-Gmrender"><a href="#安装-Gmrender" class="headerlink" title="安装 Gmrender"></a>安装 Gmrender</h3><p>1、定位到home文件夹并克隆程序源码<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ../home/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/hzeller/gmrender-resurrect.git</span></span><br></pre></td></tr></table></figure><p></p><p>2、转到刚刚克隆的gmrender-resurrect文件夹并安装<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> gmrender-resurrect</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./autogen.sh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./configure</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make install</span></span><br></pre></td></tr></table></figure><p></p><p>3、输入下面的命令运行服务并用电脑或者安卓一类支持DLNA播放的设备播放一首歌试试吧<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gmediarender -f <span class="string">"Raspberry-DLNA"</span> 2</span></span><br></pre></td></tr></table></figure><p></p><h3 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a>设置开机自启</h3><p>1、拷贝相关配置文件<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cp scripts/init.d/gmediarenderer /etc/init.d/</span></span><br></pre></td></tr></table></figure><p></p><p>2、建立用户组<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -g audio gmediarender</span><br></pre></td></tr></table></figure><p></p><p>3、修改配置文件 <code>/etc/init.d/gmediarenderer</code><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DAEMON_USER="gmediarender:audio"     #用户组</span><br><span class="line">UPNP_DEVICE_NAME="Raspberry-DLNA"    #服务名称</span><br></pre></td></tr></table></figure><p></p><p>4、设置开机自启<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-rc.d gmediarenderer defaults</span><br></pre></td></tr></table></figure><p></p><h2 id="AirPlay-协议"><a href="#AirPlay-协议" class="headerlink" title="AirPlay 协议"></a>AirPlay 协议</h2><p>参考文档：<a href="https://github.com/abrasive/shairport/wiki" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/abrasive/shairport/wiki</a></p><h3 id="安装依赖-1"><a href="#安装依赖-1" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apt-get install libssl-dev libavahi-client-dev libasound2-dev libao-dev libpulse-dev</span></span><br></pre></td></tr></table></figure><h3 id="安装-AirPlay"><a href="#安装-AirPlay" class="headerlink" title="安装 AirPlay"></a>安装 AirPlay</h3><p>1、定位到 <code>home</code> 文件夹克隆程序源码并安装<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ../home/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/abrasive/shairport.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> shairport</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make install</span></span><br></pre></td></tr></table></figure><p></p><p>2、启动服务用苹果家族设备测试一下能否正常播放<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./shairport -a Raspberry-AirPlay</span></span><br></pre></td></tr></table></figure><p></p><h3 id="设置开机自启-1"><a href="#设置开机自启-1" class="headerlink" title="设置开机自启"></a>设置开机自启</h3><p>1、拷贝相关配置文件<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cp scripts/debian/default/shairport /etc/default/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp scripts/debian/init.d/shairport /etc/init.d/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp scripts/debian/logrotate.d/shairport /etc/logrotate.d/</span></span><br></pre></td></tr></table></figure><p></p><p>2、建立用户组<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -g audio shairport</span><br></pre></td></tr></table></figure><p></p><p>3、修改配置文件 <code>/etc/init.d/shairport</code><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">USER=shairport               #用户</span><br><span class="line">GROUP=audio                  #用户组</span><br><span class="line">AP_NAME=Raspberry-AirPlay    #服务名称</span><br></pre></td></tr></table></figure><p></p><p>4、设置开机自启<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-rc.d shairport defaults</span><br></pre></td></tr></table></figure><p></p><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="https://hscbook.b0.upaiyun.com/image/raspberrypi-audio/201704170556.jpg" alt="实现效果"></p><h2 id="更多教程"><a href="#更多教程" class="headerlink" title="更多教程"></a>更多教程</h2><p><a href="http://raspberrypihq.com/how-to-turn-your-raspberry-pi-into-a-airplay-receiver-to-stream-music-from-your-iphone/" rel="external nofollow noopener noreferrer" target="_blank">http://raspberrypihq.com/how-to-turn-your-raspberry-pi-into-a-airplay-receiver-to-stream-music-from-your-iphone/</a><br><a href="https://blog.wanghw.cn/archives/raspberry-wifisoundtrack.html" rel="external nofollow noopener noreferrer" target="_blank">https://blog.wanghw.cn/archives/raspberry-wifisoundtrack.html</a><br><a href="https://github.com/hzeller/gmrender-resurrect/blob/master/INSTALL.md" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/hzeller/gmrender-resurrect/blob/master/INSTALL.md</a><br><a href="https://github.com/abrasive/shairport/wiki" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/abrasive/shairport/wiki</a></p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/raspberrypi-audio/">https://www.hscbook.com/article/raspberrypi-audio/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;改造树莓派、香橙派摇身一变无线WIFI音响在线播放，无需安装XBMC这个庞然大物也能实现DLNA和AirPlay双协议的WIFI音响，DLNA 实现于Gmrender-resurrect项目、AirPlay实现于Shairport项目&lt;br&gt;
    
    </summary>
    
      <category term="Geek" scheme="https://www.hscbook.com/categories/geek/"/>
    
    
      <category term="code" scheme="https://www.hscbook.com/tags/code/"/>
    
      <category term="RaspBerryPi" scheme="https://www.hscbook.com/tags/raspberrypi/"/>
    
      <category term="Geek" scheme="https://www.hscbook.com/tags/geek/"/>
    
      <category term="audio" scheme="https://www.hscbook.com/tags/audio/"/>
    
      <category term="DLNA" scheme="https://www.hscbook.com/tags/dlna/"/>
    
      <category term="AirPlay" scheme="https://www.hscbook.com/tags/airplay/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 安装网易云跟帖评论的方法和注意事项</title>
    <link href="https://www.hscbook.com/article/hexo-gentie/"/>
    <id>https://www.hscbook.com/article/hexo-gentie/</id>
    <published>2017-04-15T02:43:32.000Z</published>
    <updated>2018-06-24T05:54:31.973Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>对于国内来说送走多说后拥抱网易云跟帖是一个比较好的选择了，对于不在乎国内的访问的话还是比较推荐Disqus，毕竟网易云跟帖项目才刚刚开始还在BETA状态<br><a id="more"></a></p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>评论不能带有任何链接会自动Del，后台看不到也无法审核</li><li><del>文章链接不能有大写的字母或者中文</del></li><li>注册的时候填写域名千万注意别写错了，只有一次更改机会且无法删除</li><li>评论数不是真的评论数是参与数，就算未通过审核也在记数内，包括赞</li><li>Maupassant主题修改代码的时候千万要注意缩进要一一对应</li><li>其他主题重点检查<code>ProductKey，join-count，cloud-tie-wrapper</code></li></ol><h3 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h3><p>前往 <a href="https://gentie.163.com" rel="external nofollow noopener noreferrer" target="_blank">https://gentie.163.com</a> 按照网站指引注册，添加网站后定位“获取代码页”获取<code>ProductKey、LoaderID1、LoaderID2</code><br><img src="https://hscbook.b0.upaiyun.com/image//hexo-gentie/hexo-gentie-01.jpg" alt="获取ProductKey、loaderID1"><br><img src="https://hscbook.b0.upaiyun.com/image//hexo-gentie/hexo-gentie-02.jpg" alt="获取loaderID2"></p><h2 id="通用教程"><a href="#通用教程" class="headerlink" title="通用教程"></a>通用教程</h2><p>具体参考官方网的安装帮助文档 <a href="https://gentie.163.com/help.html#install" rel="external nofollow noopener noreferrer" target="_blank">https://gentie.163.com/help.html#install</a></p><h3 id="文章评论框"><a href="#文章评论框" class="headerlink" title="文章评论框"></a>文章评论框</h3><p>在文章页评论框的DIV处添加代码并替换 <code>ProductKey、LoaderID1</code> 中的文本<br><code>div</code> 的 <code>id=&quot;cloud-tie-wrapper&quot;</code> 和 <code>script</code> 的 <code>target: &quot;cloud-tie-wrapper&quot;</code> 可以更改为其他名称，但是必须是对应的。<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"cloud-tie-wrapper"</span> <span class="attr">class</span>=<span class="string">"cloud-tie-wrapper"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//img1.cache.netease.com/f2e/tie/yun/sdk/loader.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">var cloudTieConfig = &#123;</span></span><br><span class="line"><span class="undefined">  url: document.location.href, </span></span><br><span class="line"><span class="undefined">  sourceId: "",</span></span><br><span class="line"><span class="undefined">  productKey: "ProductKey",</span></span><br><span class="line"><span class="undefined">  target: "cloud-tie-wrapper"</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined">var yunManualLoad = true;</span></span><br><span class="line"><span class="undefined">Tie.loader("loaderID1", true);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><h3 id="首页评论数"><a href="#首页评论数" class="headerlink" title="首页评论数"></a>首页评论数</h3><p>在主页最尾部添加代码并替换 <code>ProductKey、LoaderID2</code> 中的文本<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">var yunModuleEnv = true;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//img1.cache.netease.com/f2e/tie/yun/sdk/loader.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  var yunTieProductKey = "ProductKey";</span></span><br><span class="line"><span class="undefined">  Tie.loader("loaderID2", true);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><p>在每个文章列放置显示评论数的<strong>span</strong><br>文章地址是你要显示评论数的文章地址比如首页的文章列表为：</p><ol><li>文章1</li><li>文章2</li><li>文章3</li></ol><p>其中文章1的地址为<code>https://hscbook.com/1</code>,那么该<strong>span</strong>的文章地址就应该为<code>https://hscbook.com/1</code><br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">lang</span>=<span class="string">"join-count"</span> <span class="attr">class</span>=<span class="string">"join-count"</span> <span class="attr">data-url</span>=<span class="string">"文章地址"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><h2 id="Maupassant适用"><a href="#Maupassant适用" class="headerlink" title="Maupassant适用"></a>Maupassant适用</h2><p>目前 <a href="https://github.com/tufu9441/maupassant-hexo" rel="external nofollow noopener noreferrer" target="_blank">Maupassant</a> 主题已经<a href="https://github.com/tufu9441/maupassant-hexo/pull/245" rel="external nofollow noopener noreferrer" target="_blank">添加了网易云跟帖</a>，<del>但是有点缺陷以及首页没有显示评论数</del>，按需修改，不要无脑复制！</p><h3 id="文章评论框-1"><a href="#文章评论框-1" class="headerlink" title="文章评论框"></a>文章评论框</h3><p><a href="https://github.com/tufu9441/maupassant-hexo" rel="external nofollow noopener noreferrer" target="_blank">Maupassant</a> 主题定位 <code>.\layout\_partial\comments.jade</code> 文件，在最尾部添加代码<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.gentie</span><br><span class="line">  .cloud-tie-wrapper#cloud-tie-wrapper</span><br><span class="line">  script.</span><br><span class="line">    <span class="keyword">var</span> cloudTieConfig = &#123;</span><br><span class="line">      url: <span class="built_in">document</span>.location.href,</span><br><span class="line">      productKey: <span class="string">'#&#123;theme.gentie&#125;'</span>,</span><br><span class="line">      target: <span class="string">'cloud-tie-wrapper'</span></span><br><span class="line">    &#125;;</span><br><span class="line">  script(src=<span class="string">'https://img1.cache.netease.com/f2e/tie/yun/sdk/loader.js'</span>)</span><br></pre></td></tr></table></figure><p></p><h3 id="首页评论数-1"><a href="#首页评论数-1" class="headerlink" title="首页评论数"></a>首页评论数</h3><p><a href="https://github.com/tufu9441/maupassant-hexo" rel="external nofollow noopener noreferrer" target="_blank">Maupassant</a> 主题定位 <code>.\layout\index.jade</code> 文件，在最尾部添加代码，<strong>千万千万千万注意要对应缩进</strong><br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.gentie</span><br><span class="line">  script.</span><br><span class="line">    <span class="keyword">var</span> yunModuleEnv = <span class="literal">true</span>;</span><br><span class="line">  script(src=<span class="string">'//img1.cache.netease.com/f2e/tie/yun/sdk/loader.js'</span>)</span><br><span class="line">  script.</span><br><span class="line">    <span class="keyword">var</span> yunTieProductKey = <span class="string">'#&#123;theme.gentie&#125;'</span>;</span><br><span class="line">    Tie.loader(<span class="string">'aHR0cHM6Ly9hcGkuZ2VudGllLjE2My5jb20vZXh0ZW5kL2xpc3Rfam9pbl9zY3JpcHQuaHRtbA=='</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p></p><p>搜索 <code>if post.description</code> 在 <code>if post.description</code> 的上面添加代码<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.gentie</span><br><span class="line">  a.ds-thread-count(<span class="class"><span class="keyword">class</span></span>=<span class="string">'cloud-tie-join-count'</span>, href=url_for(post.path) + <span class="string">'#comments'</span>)</span><br><span class="line">    span.join-count(lang=<span class="string">'join-count'</span> style=<span class="string">'margin: 0 3px 0 1px;'</span> data-url=<span class="string">'#&#123;config.url&#125;#&#123;url_for(post.path)&#125;'</span>) <span class="number">0</span></span><br><span class="line">    span Discuss</span><br></pre></td></tr></table></figure><p></p><h3 id="文章评论数"><a href="#文章评论数" class="headerlink" title="文章评论数"></a>文章评论数</h3><p>搜索 <code>if page.toc</code> 在 <code>if page.toc</code> 的上面添加代码<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.gentie</span><br><span class="line">  a.ds-thread-count(<span class="class"><span class="keyword">class</span></span>=<span class="string">'cloud-tie-join-count'</span>, href=url_for(page.path) + <span class="string">'#comments'</span>)</span><br><span class="line">    span.join-count(style=<span class="string">'font-size: 15px; color: #6E7173;'</span>) <span class="number">0</span></span><br><span class="line">    span Discuss</span><br></pre></td></tr></table></figure><p></p><h3 id="修改主题配置"><a href="#修改主题配置" class="headerlink" title="修改主题配置"></a>修改主题配置</h3><p>打开主题配置文件 <strong>_config.yml</strong> 在最后面添加（把<code>ProductKey</code>替换为上面获取的数值），注意“：”之后要有空隔<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gentie: ProductKey</span><br></pre></td></tr></table></figure><p></p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>Maupassant 修改完成后首页以及文章页上面的评论数样式好像有点问题需要修改一下<strong>style</strong>文件，你们自己琢磨一下，或者等我有空的时候修改代码再次Pull上主分支吧。有什么问题请在下面留言，觉得文章对你有帮助就多回来看看。<br><del>目前 <a href="https://github.com/tufu9441/maupassant-hexo" rel="external nofollow noopener noreferrer" target="_blank">Maupassant</a> 主题已经<a href="https://github.com/tufu9441/maupassant-hexo/pull/245" rel="external nofollow noopener noreferrer" target="_blank">添加了网易云跟帖</a>，并且已完善</del><br><strong>网易云跟帖已于2017-08-01正式关闭服务，从此又少了一个优秀的第三方评论服务！</strong><br><em>文章最后修订日期：2017-9-22 09:08:03</em></p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/hexo-gentie/">https://www.hscbook.com/article/hexo-gentie/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;对于国内来说送走多说后拥抱网易云跟帖是一个比较好的选择了，对于不在乎国内的访问的话还是比较推荐Disqus，毕竟网易云跟帖项目才刚刚开始还在BETA状态&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://www.hscbook.com/categories/hexo/"/>
    
    
      <category term="code" scheme="https://www.hscbook.com/tags/code/"/>
    
      <category term="hexo" scheme="https://www.hscbook.com/tags/hexo/"/>
    
      <category term="gentie" scheme="https://www.hscbook.com/tags/gentie/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 国内外Win环境安装全教程以及插件推荐</title>
    <link href="https://www.hscbook.com/article/hexo-install/"/>
    <id>https://www.hscbook.com/article/hexo-install/</id>
    <published>2017-04-05T04:32:59.000Z</published>
    <updated>2018-06-03T09:57:40.893Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>其实网上关于介绍安装Hexo的已经非常多了，所以这里不多作介绍，写的全是我自己安装Hexo遇到的问题和解决方法，权当自己的备忘录仅供参考，请先大概阅读全文再实际操作。<br><a id="more"></a></p></blockquote><h2 id="必备环境"><a href="#必备环境" class="headerlink" title="必备环境"></a>必备环境</h2><p>git <a href="https://git-scm.com/downloads" rel="external nofollow noopener noreferrer" target="_blank">https://git-scm.com/downloads</a><br>node.js <a href="https://nodejs.org/zh-cn/download/" rel="external nofollow noopener noreferrer" target="_blank">https://nodejs.org/zh-cn/download/</a><br>python（非必备） <a href="https://www.python.org/downloads/" rel="external nofollow noopener noreferrer" target="_blank">https://www.python.org/downloads/</a></p><h2 id="国内替代NPM源"><a href="#国内替代NPM源" class="headerlink" title="国内替代NPM源"></a>国内替代NPM源</h2><p>打开命令行输入以下命令，具体内容请查看 <a href="https://npm.taobao.org" rel="external nofollow noopener noreferrer" target="_blank">npm.taobao.org</a><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p></p><p>选择性安装，若你在海外或者你有一把精良的梯子可无视，若不安装把下面的提到的cnpm替换为npm即可</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><p>创建一个文件夹名字为HEXO，并CD到该文件夹输入两条命令<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">cnpm install</span><br></pre></td></tr></table></figure><p></p><p>成功初始化后HEXO文件夹会有如下目录<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml         #站点配置文件</span><br><span class="line">├── package.json        #应用程序的信息</span><br><span class="line">├── scaffolds           #模板文件夹</span><br><span class="line">├── source              #资源文件夹</span><br><span class="line">|   ├── _drafts         #草稿文件夹</span><br><span class="line">|   └── _posts          #文章文件夹，文章放在这里</span><br><span class="line">└── themes              #主题文件夹，下载的主题放这里</span><br></pre></td></tr></table></figure><p></p><p>【_config.yml】配置文件的详细介绍请参照 <a href="https://hexo.io/zh-cn/docs/" rel="external nofollow noopener noreferrer" target="_blank">官方文档</a></p><h2 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h2><p>使用前请自行确定插件版本是否兼容Hexo版本，当前以3.x版本推荐<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 本地搜索</span></span><br><span class="line">cnpm install hexo-generator-search --save</span><br><span class="line"><span class="meta">#</span><span class="bash"> Sitemap Of BaiDuSitemap</span></span><br><span class="line">cnpm install hexo-generator-sitemap@1.1.2 --save</span><br><span class="line">cnpm install hexo-generator-baidu-sitemap@0.1.1 --save</span><br><span class="line"><span class="meta">#</span><span class="bash"> autonofollow (自动为外链添加nofollow标签)</span></span><br><span class="line">cnpm install hexo-autonofollow --save</span><br><span class="line"><span class="meta">#</span><span class="bash">addlink 文章末尾添加文章地址</span></span><br><span class="line">cnpm install hexo-addlink --save</span><br><span class="line"><span class="meta">#</span><span class="bash"> RSS 订阅</span></span><br><span class="line">cnpm install hexo-deployer-git --save</span><br><span class="line"><span class="meta">#</span><span class="bash"> GIT部署插件</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"><span class="meta">#</span><span class="bash">静态资源压缩插件</span></span><br><span class="line">npm install hexo-all-minifier --save</span><br></pre></td></tr></table></figure><p></p><h2 id="问题解答"><a href="#问题解答" class="headerlink" title="问题解答"></a>问题解答</h2><p>有问题请先前阅读官方文档、百度或往官方github查看上面的提问再提问<br>Docs · <a href="https://hexo.io/zh-cn/docs/" rel="external nofollow noopener noreferrer" target="_blank">https://hexo.io/zh-cn/docs/</a><br>GitHub · <a href="https://github.com/hexojs/hexo/issues" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/hexojs/hexo/issues</a><br>Google Group · <a href="https://groups.google.com/group/hexo" rel="external nofollow noopener noreferrer" target="_blank">https://groups.google.com/group/hexo</a></p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/hexo-install/">https://www.hscbook.com/article/hexo-install/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;其实网上关于介绍安装Hexo的已经非常多了，所以这里不多作介绍，写的全是我自己安装Hexo遇到的问题和解决方法，权当自己的备忘录仅供参考，请先大概阅读全文再实际操作。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://www.hscbook.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.hscbook.com/tags/hexo/"/>
    
      <category term="install" scheme="https://www.hscbook.com/tags/install/"/>
    
      <category term="node" scheme="https://www.hscbook.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>无悔人生，趁青春尽轻狂</title>
    <link href="https://www.hscbook.com/article/young-frivolous/"/>
    <id>https://www.hscbook.com/article/young-frivolous/</id>
    <published>2017-04-03T11:07:57.000Z</published>
    <updated>2018-05-01T13:26:37.829Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>呢段片唔係講夢想，想提醒大家青春就要放膽去輕狂<br><a id="more"></a></p></blockquote><iframe src="//player.bilibili.com/player.html?aid=9582898&cid=15839286&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen></iframe><blockquote><p><strong>2017年3月25日发布，转载至 <a href="https://www.Youtube.com/" rel="external nofollow noopener noreferrer" target="_blank">Youtube</a></strong><br>简介：呢段片唔係講夢想，想提醒大家青春就要放膽去輕狂！<br>BOMBA：<a href="https://www.facebook.com/BOMBA.VDO" rel="external nofollow noopener noreferrer" target="_blank">https://www.facebook.com/BOMBA.VDO</a></p></blockquote><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/young-frivolous/">https://www.hscbook.com/article/young-frivolous/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;呢段片唔係講夢想，想提醒大家青春就要放膽去輕狂&lt;br&gt;
    
    </summary>
    
      <category term="Share" scheme="https://www.hscbook.com/categories/share/"/>
    
    
      <category term="video" scheme="https://www.hscbook.com/tags/video/"/>
    
      <category term="mov" scheme="https://www.hscbook.com/tags/mov/"/>
    
      <category term="mv" scheme="https://www.hscbook.com/tags/mv/"/>
    
      <category term="Youtube" scheme="https://www.hscbook.com/tags/youtube/"/>
    
      <category term="BOMBA" scheme="https://www.hscbook.com/tags/bomba/"/>
    
      <category term="励志" scheme="https://www.hscbook.com/tags/lizi/"/>
    
      <category term="转载" scheme="https://www.hscbook.com/tags/zhuanzai/"/>
    
  </entry>
  
  <entry>
    <title>树莓派打造淡入闹钟，让电台轻轻的叫你起床</title>
    <link href="https://www.hscbook.com/article/raspberrypi-alarmclock/"/>
    <id>https://www.hscbook.com/article/raspberrypi-alarmclock/</id>
    <published>2017-03-28T12:54:00.000Z</published>
    <updated>2018-06-06T11:54:19.861Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>16年入了一个树莓派B+版折腾了一下就放在角落里积灰了，我这天天总睡懒觉的人被冰冷的闹钟吓得激醒是非常痛苦的，某天打扫房间发现了被我打入冷宫的树莓派就顺手拿出来打造成淡入闹钟+晨起天气预报+晚间电台播放。<br><a id="more"></a></p></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>· 早上7点定时从低音量的<a href="http://www.qpgfm.com" rel="external nofollow noopener noreferrer" target="_blank">青苹果</a>电台（早上电台没有节目，只有音乐）逐步提升音量轻轻的音乐声叫你起床，3分钟后语音播放今天的天气预报，一个小时后结束播放。<br>· 晚上10点开始低音量播放<a href="http://www.qpgfm.com" rel="external nofollow noopener noreferrer" target="_blank">青苹果</a>电台（现在电台播放情感节目）提醒你准备碎觉了，最后一个小时候结束播放并对你说声晚安！</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="必要材料"><a href="#必要材料" class="headerlink" title="必要材料"></a>必要材料</h3><p>1.男/女，聪明大脑一块<br>2.五指手一双<br>3.能上网的树莓派一个<br>4.音响一套</p><h3 id="安装树莓派系统"><a href="#安装树莓派系统" class="headerlink" title="安装树莓派系统"></a>安装树莓派系统</h3><p>本文采用的是树莓派官方指定系统，小白of圣手党推荐使用好方便照葫芦画瓢是吧。<br>这里就不教了，网上一搜一大堆的教程。<br>· <a href="http://jingyan.baidu.com/article/636f38bb5f52e9d6b84610e5.html" rel="external nofollow noopener noreferrer" target="_blank">百度经验</a><br>· <a href="http://www.cnblogs.com/rond/p/4970071.html" rel="external nofollow noopener noreferrer" target="_blank">树莓派入手体验和系统安装</a><br>· <a href="http://blog.csdn.net/u011388550/article/details/49981703" rel="external nofollow noopener noreferrer" target="_blank">树莓派入门之装系统</a></p><h3 id="安装必要程序"><a href="#安装必要程序" class="headerlink" title="安装必要程序"></a>安装必要程序</h3><h4 id="Vlc-播放器"><a href="#Vlc-播放器" class="headerlink" title="Vlc 播放器"></a>Vlc 播放器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行 sudo apt-get install vlc</span><br></pre></td></tr></table></figure><h4 id="Mplayer-播放器"><a href="#Mplayer-播放器" class="headerlink" title="Mplayer 播放器"></a>Mplayer 播放器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行 sudo apt-get install mplayer</span><br></pre></td></tr></table></figure><h4 id="Cron-计划任务"><a href="#Cron-计划任务" class="headerlink" title="Cron 计划任务"></a>Cron 计划任务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行 sudo apt-get install cron</span><br></pre></td></tr></table></figure><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><h3 id="获取代码"><a href="#获取代码" class="headerlink" title="获取代码"></a>获取代码</h3><p>下载我上传的代码 <a href="https://github.com/Hscpro/Morning.git" rel="external nofollow noopener noreferrer" target="_blank">Github</a> <a href="https://git.coding.net/Hscpro/Morning.git" rel="external nofollow noopener noreferrer" target="_blank">Coding</a><br>将<strong>Morning</strong>文件夹上传到树莓派的<strong>Home</strong>文件夹里</p><h3 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h3><p>申请和风天气KEY <a href="http://www.heweather.com/" rel="external nofollow noopener noreferrer" target="_blank">申请地址</a>，申请百度开发者语音转换a/s key <a href="http://yuyin.baidu.com/" rel="external nofollow noopener noreferrer" target="_blank">申请地址</a><br>修改 Morning/weather.py 文件第31/65行处的“和风天气KEY”替换为你的和风天气KEY<br></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">28</span> ... </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        fp = open(fn, <span class="string">'w'</span>)</span><br><span class="line">        url_city = <span class="string">'https://free-api.heweather.com/v5/citylist?search='</span>+search+<span class="string">'&amp;key=和风天气KEY'</span></span><br><span class="line">        req = urllib2.Request(url_city)</span><br><span class="line">        resp = urllib2.urlopen(req)</span><br><span class="line"><span class="number">33</span> ...</span><br><span class="line"><span class="number">62</span> ...</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    url_weather = <span class="string">'https://free-api.heweather.com/v5/'</span>+search+<span class="string">'?city='</span>+index+<span class="string">'&amp;key=和风天气KEY'</span></span><br><span class="line">    req = urllib2.Request(url_weather)</span><br><span class="line">    resp = urllib2.urlopen(req)</span><br><span class="line"><span class="number">68</span> ...</span><br></pre></td></tr></table></figure><p></p><p>修改 Morning/weather.py 文件第82/83行处的“百度开发api_key/百度开发sec_key”替换为你的百度开发api_key/百度开发sec_key<br></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">81</span> ...</span><br><span class="line">    api_key = <span class="string">"百度语音api_key"</span></span><br><span class="line">    sec_key = <span class="string">"百度语音sec_key"</span></span><br><span class="line"><span class="number">84</span> ...</span><br></pre></td></tr></table></figure><p></p><p>修改 Morning/weather.py 文件第93行的城市代码为你所在的城市的代码。 <a href="http://www.heweather.com/documents/city" rel="external nofollow noopener noreferrer" target="_blank">城市代码列表</a><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">91 ...</span><br><span class="line">def get_wat():</span><br><span class="line">    city_id = "CN101280601"  #城市代码   </span><br><span class="line">    city_weather = get_city_weather(city_id)</span><br><span class="line">95 ...</span><br></pre></td></tr></table></figure><p></p><h3 id="修改其他参数"><a href="#修改其他参数" class="headerlink" title="修改其他参数"></a>修改其他参数</h3><p>可以适当修改Morning.sh和Evening.sh文件、更换电台，设置播放时间，音量等里面的注释都写得很清楚了，这里不详细介绍了。<br>比如<br>· 修改 Morning/Morning.sh与Evening.sh 文件的“sleep 60m”可以确定播放电台多久<br>· 修改 Morning/Morning.sh与Evening.sh 文件的 “<a href="http://hls.qingting.fm:80/live/4576.m3u8?bitrate=64”可以更换网络电台" rel="external nofollow noopener noreferrer" target="_blank">http://hls.qingting.fm:80/live/4576.m3u8?bitrate=64”可以更换网络电台</a><br>· 修改 –equalizer-bands=”8 3 0 -2 -1 0.5 1.5 0.5 3 1.5” 可以设定播放器的均衡器</p><h3 id="给予执行权限"><a href="#给予执行权限" class="headerlink" title="给予执行权限"></a>给予执行权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 775 /home/Morning/vlc/*</span><br><span class="line">chmod 775 /home/Morning/Morning.sh</span><br><span class="line">chmod 775 /home/Morning/Evening.sh</span><br></pre></td></tr></table></figure><h3 id="添加计划任务"><a href="#添加计划任务" class="headerlink" title="添加计划任务"></a>添加计划任务</h3><p><strong>注意：请确定树莓派的时区是在中国，树莓派默认的时区不是中国。并确定时间是否正确</strong><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">执行：</span><br><span class="line">export EDITOR="/usr/bin/nano" ; crontab -e</span><br><span class="line">输入：</span><br><span class="line">30 07 * * * sudo /home/Morning/Morning.sh</span><br><span class="line">00 22 * * * sudo /home/Morning/Evening.sh</span><br></pre></td></tr></table></figure><p></p><p>执行时间视需求而定，比如你想早上8点叫你起床，晚上9点播放电台就修改为<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">00 08 * * * sudo /home/Morning/Morning.sh</span><br><span class="line">00 21 * * * sudo /home/Morning/Evening.sh</span><br></pre></td></tr></table></figure><p></p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>好了，等着第二天音响里轻轻响起的音乐开始美好的一天吧，有什么问题可以在下面留言。</p><p>不喜欢FM？这里有播放网易云音乐日推歌曲的文章：《<a href="https://www.hscbook.com/article/raspberrypi-cloudmusic/">树莓派音乐闹钟，定时播放网易云音乐每日推荐歌单歌曲及插播语音天气预报</a>》</p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/raspberrypi-alarmclock/">https://www.hscbook.com/article/raspberrypi-alarmclock/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;16年入了一个树莓派B+版折腾了一下就放在角落里积灰了，我这天天总睡懒觉的人被冰冷的闹钟吓得激醒是非常痛苦的，某天打扫房间发现了被我打入冷宫的树莓派就顺手拿出来打造成淡入闹钟+晨起天气预报+晚间电台播放。&lt;br&gt;
    
    </summary>
    
      <category term="Geek" scheme="https://www.hscbook.com/categories/geek/"/>
    
    
      <category term="code" scheme="https://www.hscbook.com/tags/code/"/>
    
      <category term="linux" scheme="https://www.hscbook.com/tags/linux/"/>
    
      <category term="RaspBerryPi" scheme="https://www.hscbook.com/tags/raspberrypi/"/>
    
      <category term="FM" scheme="https://www.hscbook.com/tags/fm/"/>
    
      <category term="Geek" scheme="https://www.hscbook.com/tags/geek/"/>
    
  </entry>
  
  <entry>
    <title>eAccelerator与phpMyAdmin冲突造成页面空白的解决办法</title>
    <link href="https://www.hscbook.com/article/eaccelerator-phpmyadmin/"/>
    <id>https://www.hscbook.com/article/eaccelerator-phpmyadmin/</id>
    <published>2017-03-25T14:51:48.000Z</published>
    <updated>2017-09-23T06:15:28.617Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>安装eAccelerator后会造成phpMyAdmin登录页面不能正常显示，在httpd.conf文件添加一段代码就可以了，原理是禁用了在访问phpMyAdmin时的eAccelerator，其他页面不受影响。<br><a id="more"></a></p></blockquote><h2 id="修改httpd-conf"><a href="#修改httpd-conf" class="headerlink" title="修改httpd.conf"></a>修改httpd.conf</h2><p>只适用于基于Apache的服务器，把【/var/www/html/phpMyAdmin】修改为你的phpMyAdmin的实际完整路径，修改后重启HTTP服务 service httpd restart<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Directory <span class="string">"/var/www/html/phpMyAdmin"</span></span><br><span class="line">php_admin_value eaccelerator.enable <span class="number">0</span></span><br></pre></td></tr></table></figure><p></p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/eaccelerator-phpmyadmin/">https://www.hscbook.com/article/eaccelerator-phpmyadmin/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;安装eAccelerator后会造成phpMyAdmin登录页面不能正常显示，在httpd.conf文件添加一段代码就可以了，原理是禁用了在访问phpMyAdmin时的eAccelerator，其他页面不受影响。&lt;br&gt;
    
    </summary>
    
      <category term="Code" scheme="https://www.hscbook.com/categories/code/"/>
    
    
      <category term="php" scheme="https://www.hscbook.com/tags/php/"/>
    
      <category term="linux" scheme="https://www.hscbook.com/tags/linux/"/>
    
      <category term="apache" scheme="https://www.hscbook.com/tags/apache/"/>
    
  </entry>
  
  <entry>
    <title>Nginx反代理加速，打造自己的Gravatar头像缓存服务器</title>
    <link href="https://www.hscbook.com/article/gravatar-cdn/"/>
    <id>https://www.hscbook.com/article/gravatar-cdn/</id>
    <published>2017-03-25T14:20:34.000Z</published>
    <updated>2018-06-24T05:54:31.971Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>利用Nginx反代理结合七牛CDN打造自己的Gravatar头像服务器<br><a id="more"></a></p></blockquote><h2 id="修改Nginx开启反代理"><a href="#修改Nginx开启反代理" class="headerlink" title="修改Nginx开启反代理"></a>修改Nginx开启反代理</h2><h3 id="修改Nginx配置文件"><a href="#修改Nginx配置文件" class="headerlink" title="修改Nginx配置文件"></a>修改Nginx配置文件</h3><p>修改 nginx.conf 文件，搜索关键词server，在上面添加以下代码<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">client_body_buffer_size <span class="number">512</span>k;</span><br><span class="line">proxy_connect_timeout <span class="number">5</span>;</span><br><span class="line">proxy_read_timeout <span class="number">60</span>;</span><br><span class="line">proxy_send_timeout <span class="number">5</span>;</span><br><span class="line">proxy_buffer_size <span class="number">16</span>k;</span><br><span class="line">proxy_buffers <span class="number">4</span> <span class="number">64</span>k;</span><br><span class="line">proxy_busy_buffers_size <span class="number">128</span>k;</span><br><span class="line">proxy_temp_file_write_size <span class="number">128</span>k;</span><br><span class="line">proxy_temp_path /home/cache/temp;</span><br><span class="line">proxy_cache_path /home/cache/path levels=<span class="number">1</span>:<span class="number">2</span> keys_zone=cache_one:<span class="number">128</span>m inactive=<span class="number">7</span>d max_size=<span class="number">512</span>m;</span><br><span class="line"><span class="comment">#128M为使用的内存大小，7d为缓存7天，512m为缓存大小。其他参数不一一解释请自行百度。</span></span><br></pre></td></tr></table></figure><p></p><h3 id="创建反代理文件"><a href="#创建反代理文件" class="headerlink" title="创建反代理文件"></a>创建反代理文件</h3><p>在vhost创建文件 gravatar.conf，<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen <span class="number">80</span>;</span><br><span class="line">server_name gravatar.warmeh.com; <span class="comment">#访问的域名（这里修改成你自己的子域名）</span></span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">proxy_cache cache_one; <span class="comment">#开启缓存</span></span><br><span class="line">proxy_cache_valid <span class="number">200</span> <span class="number">304</span> <span class="number">7</span>d; <span class="comment">#正常状态缓存，因为头像不经常改动所以缓存7天</span></span><br><span class="line">proxy_cache_valid any <span class="number">1</span>m; <span class="comment">#其他状态(404,402等)缓存1分钟</span></span><br><span class="line">proxy_cache_key <span class="string">"$scheme$host$request_uri"</span>; <span class="comment">#缓存key规则，用于自动清除缓存</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#反代配置</span></span><br><span class="line">proxy_pass http:<span class="comment">//ja.gravatar.com/; #反代理的域名（gravatar官方）</span></span><br><span class="line">proxy_redirect off;</span><br><span class="line"></span><br><span class="line"><span class="comment">#向后端传递访客ip</span></span><br><span class="line">proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">proxy_set_header X-Forwarded-<span class="keyword">For</span> $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line"><span class="comment">#20为单ip连接数,200k为单ip连接速度，若要开启请去掉#</span></span><br><span class="line"><span class="comment">#limit_conn one 2;</span></span><br><span class="line"><span class="comment">#limit_rate 200k;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志文件</span></span><br><span class="line">access_log /home/wwwlogs/gravatar_proxy.log access;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="添加域名解析"><a href="#添加域名解析" class="headerlink" title="添加域名解析"></a>添加域名解析</h2><p>解析生效后访问 gravatar.你的域名.com/avatar/027f25a89baa6c09d0fae9d618fd1f0f?s=64&amp;d=retro&amp;r=G 配置正常的话就能正常显示头像<br><img src="https://hscbook.b0.upaiyun.com/image/gravatar-cdn/20161033-01.jpg" alt="添加域名解析"></p><h2 id="WordPress修改地址"><a href="#WordPress修改地址" class="headerlink" title="WordPress修改地址"></a>WordPress修改地址</h2><p><img src="https://hscbook.b0.upaiyun.com/image/gravatar-cdn/20161033-02.jpg" alt="WordPress修改地址"></p><blockquote><p><strong>自定义Gravatar服务器插件下载</strong><br>下载地址1：<a href="http://pan.baidu.com/s/1o6w4aAQ" rel="external nofollow noopener noreferrer" target="_blank">http://pan.baidu.com/s/1o6w4aAQ</a> 密码：v7ph<br>下载地址2：<a href="https://eyun.baidu.com/s/3o7Qv1Ei" rel="external nofollow noopener noreferrer" target="_blank">https://eyun.baidu.com/s/3o7Qv1Ei</a> 密码：hscbook</p></blockquote><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/gravatar-cdn/">https://www.hscbook.com/article/gravatar-cdn/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;利用Nginx反代理结合七牛CDN打造自己的Gravatar头像服务器&lt;br&gt;
    
    </summary>
    
      <category term="Code" scheme="https://www.hscbook.com/categories/code/"/>
    
    
      <category term="php" scheme="https://www.hscbook.com/tags/php/"/>
    
      <category term="wordpress" scheme="https://www.hscbook.com/tags/wordpress/"/>
    
      <category term="gravatar" scheme="https://www.hscbook.com/tags/gravatar/"/>
    
      <category term="cdn" scheme="https://www.hscbook.com/tags/cdn/"/>
    
      <category term="nginx" scheme="https://www.hscbook.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>WP插件CodeColorer兼容PHP7</title>
    <link href="https://www.hscbook.com/article/codecolorer-php7/"/>
    <id>https://www.hscbook.com/article/codecolorer-php7/</id>
    <published>2017-03-25T08:30:01.000Z</published>
    <updated>2017-04-22T14:29:39.048Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文参考官方文档 <a href="http://php.net/preg_replace/" rel="external nofollow noopener noreferrer" target="_blank">PHP7/preg_replace函数</a><br>请定位codecolorer代码插件编辑界面并定位codecolorer/codecolorer-core.php文件修改4段代码<br><a id="more"></a></p></blockquote><hr><h2 id="修改代码片段-1"><a href="#修改代码片段-1" class="headerlink" title="修改代码片段 1"></a>修改代码片段 1</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$content = preg_replace(<span class="string">'#(\s*)\[cc([^\s\]_]*(?:_[^\s\]]*)?)([^\]]*)\](.*?)\[/cc\2\](\s*)#sie'</span>, <span class="string">'$this-&amp;gt;PerformHighlightCodeBlock(\'\\4\', \'\\3\', $content, \'\\2\', \'\\1\', \'\\5\');'</span>, $content);</span><br><span class="line">$content = preg_replace(<span class="string">'#(\s*)\&amp;lt;code(.*?)\&amp;gt;(.*?)\(\s*)#sie'</span>, <span class="string">'$this-&amp;gt;PerformHighlightCodeBlock(\'\\3\', \'\\2\', $content, \'\', \'\\1\', \'\\4\');'</span>, $content);</span><br></pre></td></tr></table></figure><h4 id="变更为"><a href="#变更为" class="headerlink" title="变更为"></a><em>变更为</em></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$content = preg_replace_callback(<span class="string">'#(\s*)\[cc([^\s\]_]*(?:_[^\s\]]*)?)([^\]]*)\](.*?)\[/cc\2\](\s*)#si'</span>, <span class="function"><span class="keyword">function</span><span class="params">($r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&amp;gt;PerformHighlightCodeBlock($r[<span class="number">4</span>], $r[<span class="number">3</span>], $content, $r[<span class="number">2</span>], $r[<span class="number">1</span>], $r[<span class="number">5</span>]);</span><br><span class="line">&#125;, $content);</span><br><span class="line">$content = preg_replace_callback(<span class="string">'#(\s*)\&amp;lt;code(.*?)\&amp;gt;(.*?)\(\s*)#si'</span>, <span class="function"><span class="keyword">function</span><span class="params">($r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&amp;gt;PerformHighlightCodeBlock($r[<span class="number">3</span>], $r[<span class="number">2</span>], $content, <span class="string">''</span>, $r[<span class="number">1</span>], $r[<span class="number">4</span>]);</span><br><span class="line">&#125;, $content);</span><br></pre></td></tr></table></figure><hr><h2 id="修改代码片段-2"><a href="#修改代码片段-2" class="headerlink" title="修改代码片段 2"></a>修改代码片段 2</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$text = preg_replace(<span class="string">'~*([0-9a-f]+);~ei'</span>, <span class="string">'chr(hexdec("\\1"))'</span>, $text);</span><br><span class="line">$text = preg_replace(<span class="string">'~*([0-9]+);~e'</span>, <span class="string">'chr(\\1)'</span>, $text);</span><br></pre></td></tr></table></figure><h4 id="变更为-1"><a href="#变更为-1" class="headerlink" title="变更为"></a><em>变更为</em></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$text = preg_replace_callback(<span class="string">'~*([0-9a-f]+);~i'</span>, <span class="function"><span class="keyword">function</span><span class="params">($r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> chr(hexdec($r[<span class="number">1</span>]));</span><br><span class="line">&#125;, $text);</span><br><span class="line">$text = preg_replace_callback(<span class="string">'~*([0-9]+);~'</span>, <span class="function"><span class="keyword">function</span><span class="params">($r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> chr($r[<span class="number">1</span>]);</span><br><span class="line">&#125;, $text);</span><br></pre></td></tr></table></figure><hr><h2 id="修改代码片段-3"><a href="#修改代码片段-3" class="headerlink" title="修改代码片段 3"></a>修改代码片段 3</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$content = preg_replace(<span class="string">'#(\s*)(\[cc[^\s\]_]*(?:_[^\s\]]*)?[^\]]*\].*?\[/cc\1\])(\s*)#sie'</span>, <span class="string">'$this-&amp;gt;PerformProtectComment(\'\\2\', $content, \'\\1\', \'\\3\');'</span>, $content);</span><br><span class="line">$content = preg_replace(<span class="string">'#(\s*)(\&amp;lt;code.*?\&amp;gt;.*?\)(\s*)#sie'</span>, <span class="string">'$this-&amp;gt;PerformProtectComment(\'\\2\', $content, \'\\1\', \'\\3\');'</span>, $content);</span><br></pre></td></tr></table></figure><h4 id="变更为-2"><a href="#变更为-2" class="headerlink" title="变更为"></a><em>变更为</em></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$content = preg_replace_callback(<span class="string">'#(\s*)(\[cc[^\s\]_]*(?:_[^\s\]]*)?[^\]]*\].*?\[/cc\1\])(\s*)#si'</span>, <span class="function"><span class="keyword">function</span><span class="params">($r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&amp;gt;PerformProtectComment($r[<span class="number">2</span>], $content, $r[<span class="number">1</span>], $r[<span class="number">3</span>]);</span><br><span class="line">&#125;, $content);</span><br><span class="line">$content = preg_replace_callback(<span class="string">'#(\s*)(\&amp;lt;code.*?\&amp;gt;.*?\)(\s*)#si'</span>, <span class="function"><span class="keyword">function</span><span class="params">($r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&amp;gt;PerformProtectComment($r[<span class="number">2</span>], $content, $r[<span class="number">1</span>], $r[<span class="number">3</span>]);</span><br><span class="line">&#125;, $content);</span><br></pre></td></tr></table></figure><hr><h2 id="修改代码片段-4"><a href="#修改代码片段-4" class="headerlink" title="修改代码片段 4"></a>修改代码片段 4</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$text = preg_replace(<span class="string">'/(&amp;lt; \?php)/i'</span>, <span class="string">'&lt;!--?php'</span>, $text);&amp;lt;br ?--&gt; $text = preg_replace(<span class="string">'/(?:^(?:\s*[\r\n])+|\s+$)/'</span>, <span class="string">''</span>, $text);</span><br></pre></td></tr></table></figure><h4 id="变更为-3"><a href="#变更为-3" class="headerlink" title="变更为"></a><em>变更为</em></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$text = preg_replace_callback(<span class="string">'/(&amp;lt; \?php)/i'</span>, <span class="function"><span class="keyword">function</span><span class="params">($r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'&lt;!--?php'</span>; &amp;lt;br ?--&gt; &#125;, $text);</span><br><span class="line">$text = preg_replace_callback(<span class="string">'/(?:^(?:\s*[\r\n])+|\s+$)/'</span>, <span class="function"><span class="keyword">function</span><span class="params">($r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">&#125;, $text);</span><br></pre></td></tr></table></figure><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/codecolorer-php7/">https://www.hscbook.com/article/codecolorer-php7/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;本文参考官方文档 &lt;a href=&quot;http://php.net/preg_replace/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;PHP7/preg_replace函数&lt;/a&gt;&lt;br&gt;请定位codecolorer代码插件编辑界面并定位codecolorer/codecolorer-core.php文件修改4段代码&lt;br&gt;
    
    </summary>
    
      <category term="Code" scheme="https://www.hscbook.com/categories/code/"/>
    
    
      <category term="php" scheme="https://www.hscbook.com/tags/php/"/>
    
      <category term="html" scheme="https://www.hscbook.com/tags/html/"/>
    
      <category term="wordpress" scheme="https://www.hscbook.com/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.hscbook.com/article/hello-world/"/>
    <id>https://www.hscbook.com/article/hello-world/</id>
    <published>2017-03-24T10:46:31.000Z</published>
    <updated>2017-04-22T14:29:54.691Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>嘿！欢迎来到<a href="https://hexo.io/" rel="external nofollow noopener noreferrer" target="_blank">Hexo</a>！这是你的第一篇文章。请查阅<a href="https://hexo.io/docs/" rel="external nofollow noopener noreferrer" target="_blank">在线文档</a>以获取更多信息。使用Hexo时如果你有任何问题，你可以在官网的问题解答中找到答案，或者你可以在<a href="https://github.com/hexojs/hexo/issues" rel="external nofollow noopener noreferrer" target="_blank">GitHub</a>中提问。<br><a id="more"></a></p></blockquote><h2 id="简易步骤"><a href="#简易步骤" class="headerlink" title="简易步骤"></a>简易步骤</h2><h3 id="建立工作文件夹"><a href="#建立工作文件夹" class="headerlink" title="建立工作文件夹"></a>建立工作文件夹</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new "My New Post"</span><br></pre></td></tr></table></figure><p>帮助文档: <a href="https://hexo.io/docs/writing.html" rel="external nofollow noopener noreferrer" target="_blank">Writing</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>帮助文档: <a href="https://hexo.io/docs/generating.html" rel="external nofollow noopener noreferrer" target="_blank">Generating</a></p><h3 id="启动网页服务"><a href="#启动网页服务" class="headerlink" title="启动网页服务"></a>启动网页服务</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>帮助文档: <a href="https://hexo.io/docs/server.html" rel="external nofollow noopener noreferrer" target="_blank">Server</a></p><h3 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>帮助文档: <a href="https://hexo.io/docs/deployment.html" rel="external nofollow noopener noreferrer" target="_blank">Deployment</a></p><div style="border-top:1px solid rgba(238,238,238,1);padding:25px 0 10px 0"><strong>文章协议：</strong><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" title="CC BY-NC-ND 4.0" rel="external nofollow noopener noreferrer" target="_blank"> Attribution-NonCommercial-NoDerivatives</a><br><strong>文章地址：</strong> <a href="https://www.hscbook.com/article/hello-world/">https://www.hscbook.com/article/hello-world/</a><br><strong>除非注明，本博文章均为原创，转载请以链接形式标明本文地址</strong><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;嘿！欢迎来到&lt;a href=&quot;https://hexo.io/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Hexo&lt;/a&gt;！这是你的第一篇文章。请查阅&lt;a href=&quot;https://hexo.io/docs/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;在线文档&lt;/a&gt;以获取更多信息。使用Hexo时如果你有任何问题，你可以在官网的问题解答中找到答案，或者你可以在&lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;中提问。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://www.hscbook.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.hscbook.com/tags/hexo/"/>
    
      <category term="HelloWorld" scheme="https://www.hscbook.com/tags/helloworld/"/>
    
  </entry>
  
</feed>
